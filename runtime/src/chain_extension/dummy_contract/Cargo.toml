[package]
name = "dummy_contract"
version = "0.1.0"
authors = ["Fragcolor Pte. Ltd. <ask@fragcolor.com>"]
edition = "2021"

[dependencies]
ink_primitives = { version = "3.3", default-features = false }
ink_metadata = { version = "3.3", default-features = false, features = ["derive"], optional = true }
ink_env = { version = "3.3", default-features = false }
ink_storage = { version = "3.3", default-features = false }
ink_lang = { version = "3.3", default-features = false }
ink_prelude = { version = "3.3", default-features = false }

scale = { package = "parity-scale-codec", version = "3", default-features = false, features = ["derive"] }
scale-info = { version = "2", default-features = false, features = ["derive"], optional = true }

sp-fragnova = { version = '0.1.0', default-features = false }
# We use this dependency to prevent the error "`#[global_allocator]` in ink_allocator conflicts with global allocator in: sp_io". This solution was found from https://substrate.stackexchange.com/questions/4733/error-when-compiling-a-contract-using-the-xcm-chain-extension
sp-io = { version = '6.0.0', default-features = false, features = ["disable_panic_handler", "disable_oom", "disable_allocator"], git = 'https://github.com/fragcolor-xyz/substrate.git', tag = 'fragnova-v0.0.6' }

protos = { version = "0.1.26", default-features = false }

fragnova_extensions = { version = '0.1.0', default-features = false }

[lib]
name = "dummy_contract"
path = "lib.rs"
crate-type = [
	# Used for normal contract Wasm blobs.
	"cdylib",
]

[features]
default = ["std"]
std = [
    "ink_metadata/std",
    "ink_env/std",
    "ink_storage/std",
    "ink_primitives/std",
    "ink_prelude/std",
    "scale/std",
    "scale-info/std",
    "sp-fragnova/std",
    "sp-io/std",
    "protos/std",
    "fragnova_extensions/std"
]
ink-as-dependency = []


[workspace]
