name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches:
      - devel
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # exit early when the PR is a draft
  setup:
    if: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event.pull_request.draft == false }}
    runs-on: ubuntu-latest
    steps:
      - run: exit 0

  check:
    needs: setup
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v3

      - name: Install the Necessary Packages
        run: |
          sudo apt update -y
          sudo apt install -y cmake pkg-config libssl-dev git build-essential clang libclang-dev curl protobuf-compiler

      - name: Install Rustup
        run: |
          curl https://sh.rustup.rs -sSf | sh -s -- -y
          source ~/.cargo/env
          rustup default nightly
          rustup update nightly
          rustup update stable
          rustup target add wasm32-unknown-unknown --toolchain nightly

      - uses: Swatinem/rust-cache@v1

      - uses: actions/setup-node@v3
        with:
          node-version: '14'  # The node-version input is optional. If not supplied, the node version from PATH will be used. However, it is recommended to always specify Node.js version and don't rely on the system one.

      - name: Check if Clamor Builds
        run: |
          RUSTFLAGS="-D missing-docs" cargo build --features runtime-benchmarks

      - name: Check if all the Polkadot.js RPC tests pass
        run: |
          RUST_LOG=bitswap=trace,pallet_protos::pallet=trace,pallet_frag::pallet=trace,pallet_fragments::pallet=trace,pallet_accounts::pallet=trace target/debug/clamor --dev --tmp --rpc-external --rpc-port 9933 --rpc-cors all --ws-external --enable-offchain-indexing true --rpc-methods=Unsafe --ipfs-server &
          sleep 120 # sleep 10
          cd ./rpc &&
          npm install &&
          npm test

          kill %1

      - name: Check if a Proto-Fragment's Data is Downloadable via IPFS
        run: |
          RUST_LOG=bitswap=trace,pallet_protos::pallet=trace,pallet_frag::pallet=trace,pallet_fragments::pallet=trace,pallet_accounts::pallet=trace target/debug/clamor --dev --tmp --rpc-external --rpc-port 9933 --rpc-cors all --ws-external --enable-offchain-indexing 1 --rpc-methods=Unsafe --ipfs-server &
          docker run --rm --user root --network host --volume ${{ github.workspace }}:/dummy_folder chainblocks/shards sh /dummy_folder/shards/test-ipfs.sh
          kill %1

      - name: Check if Tests Pass and Push to Codecov.io
        run: |
          cargo install cargo-tarpaulin
          cargo tarpaulin --features runtime-benchmarks --out Xml
          bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports"

      - name: Check if Rustdoc Builds
        run: |
          cargo doc --no-deps
