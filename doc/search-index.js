var searchIndex = JSON.parse('{\
"clamor":{"doc":"TODO: Documentation","t":[0,0,0,0,6,6,6,6,5,5,5,5,5,5,5,4,3,13,13,11,11,11,11,11,11,11,11,11,11,12,11,11,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["chain_spec","clamor","rpc","service","ChainSpec","DetachId","EthId","UploadId","authority_keys_from_seed","development_config","get_account_id_from_seed","get_from_seed","get_from_seed_to_eth","live_config","local_testnet_config","DenyUnsafe","FullDeps","No","Yes","__clone_box","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","check_if_safe","client","clone","clone_into","create_full","deny_unsafe","deref","deref","deref_mut","deref_mut","drop","drop","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","pool","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","ExecutorDispatch","NativeElseWasmExecutor","__clone_box","allow_missing_host_functions","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","call","clone","clone_into","deref","deref","deref_mut","deref_mut","dispatch","drop","drop","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","native_version","native_version","new","new_full","new_partial","read_runtime_version","runtime_version","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip"],"q":["clamor","","","","clamor::chain_spec","","","","","","","","","","","clamor::rpc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clamor::service","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["In Substrate, a chain specification is the collection of …","TODO: Documentation","A collection of node-specific RPC methods.","Service and ServiceFactory implementation. Specialized …","Specialized <code>ChainSpec</code>. This is a specialization of the …","TODO: Documentation","TODO: Documentation","TODO: Documentation","Generate an Aura authority key.","Returns the <code>ChainSpec</code> struct used when for …","Generate an account ID from seed.","Generate a crypto pair from seed.","Generate a crypto pair from seed.","Returns the <code>ChainSpec</code> struct used when for …","Returns the <code>ChainSpec</code> struct used when for …","Signifies whether a potentially unsafe RPC should be …","Full client dependencies.","Allows calling every RPCs.","Denies only potentially unsafe RPCs.","","","","","","","","","","Returns <code>Ok(())</code> if the RPCs considered unsafe are safe to …","The client instance to use.","","","Instantiate all Full RPC extensions.","Whether to deny unsafe calls","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Transaction pool instance.","","","","","","","","","","","","","","TODO: Documentation. See: …","A generic <code>CodeExecutor</code> implementation that uses a delegate …","","Ignore missing function imports if set true.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Create new instance.","Builds a new service for a full client.","TODO: Documentation. See: …","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,11,9,11,9,11,9,11,9,9,11,9,9,0,11,11,9,11,9,11,9,9,11,9,11,11,9,9,11,11,9,9,11,9,11,9,11,9,11,9,11,9,11,9,11,9,11,9,11,9,11,9,11,9,11,9,11,9,11,9,0,0,22,22,22,37,22,37,22,37,22,37,22,22,22,22,37,22,37,37,22,37,22,37,22,22,37,37,22,22,37,37,22,37,22,37,22,37,22,37,22,37,22,37,22,37,22,37,22,0,0,22,22,22,22,37,22,37,22,37,22,37,22,37,22,37],"f":[0,0,0,0,0,0,0,0,[1],[[],[[4,[2,3]]]],[1,5],[1],[1,6],[[],[[4,[2,3]]]],[[],[[4,[2,3]]]],0,0,0,0,[7],[[],8],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[9,[[4,[10]]]],0,[9,9],[[]],[11,[[4,[12,[14,[13]]]]]],0,[15],[15],[15],[15],[15],[15],[[9,16],[[4,[17]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],15],[[],15],[[]],[[]],[[[14,[18]]],[[14,[8,18]]]],[[[14,[18]]],[[14,[8,18]]]],[19,[[19,[8]]]],[19,[[19,[8]]]],[20,[[20,[8]]]],[20,[[20,[8]]]],[[]],[[]],[[]],[[]],0,[[]],[[],4],[[],4],[[],4],[[],4],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[7],[[22,23]],[[],8],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[[22,24,25,1,23,26]],[22,22],[[]],[15],[15],[15],[15],[1,[[26,[[28,[27]]]]]],[15],[15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],15],[[],15],[[]],[[]],[[[14,[18]]],[[14,[8,18]]]],[[[14,[18]]],[[14,[8,18]]]],[19,[[19,[8]]]],[19,[[19,[8]]]],[20,[[20,[8]]]],[20,[[20,[8]]]],[[]],[[]],[[]],[[]],[22,29],[[],29],[[30,[26,[31]],15,27],22],[[32,[26,[3]]],[[4,[33,34]]]],[32,[[4,[[43,[[38,[35,36,[22,[37]]]],[39,[35]],[40,[[39,[35]],35]],[41,[35,[38,[35,36,[22,[37]]]]]],[42,[35,[38,[35,36,[22,[37]]]]]]]],34]]]],[[22,24],[[4,[[28,[27,18]],3]]]],[[22,24,25],[[4,[44,45]]]],[[]],[[],4],[[],4],[[],4],[[],4],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[15,"str"],[6,"ChainSpec"],[3,"String"],[4,"Result"],[6,"AccountId"],[3,"Public"],[3,"Private"],[8,"Any"],[4,"DenyUnsafe"],[3,"UnsafeRpcError"],[3,"FullDeps"],[3,"RpcModule"],[8,"Error"],[3,"Box"],[15,"usize"],[3,"Formatter"],[3,"Error"],[3,"Global"],[3,"Arc"],[3,"Rc"],[3,"TypeId"],[3,"NativeElseWasmExecutor"],[15,"bool"],[8,"Externalities"],[3,"RuntimeCode"],[4,"Option"],[15,"u8"],[3,"Vec"],[3,"NativeVersion"],[4,"WasmExecutionMethod"],[15,"u64"],[3,"Configuration"],[3,"TaskManager"],[4,"Error"],[6,"Block"],[3,"RuntimeApi"],[3,"ExecutorDispatch"],[6,"TFullClient"],[6,"TFullBackend"],[3,"LongestChain"],[6,"DefaultImportQueue"],[6,"FullPool"],[3,"PartialComponents"],[3,"RuntimeVersion"],[4,"Error"]]},\
"clamor_runtime":{"doc":"The Runtime of the Clamor Node.","t":[6,6,6,13,13,6,6,6,6,6,6,6,6,3,3,6,13,13,6,6,6,6,6,13,13,4,6,6,3,3,6,8,17,17,4,8,6,13,13,17,17,3,3,3,3,6,13,13,6,4,6,3,3,6,13,13,3,6,13,13,6,17,6,6,16,6,13,13,3,6,3,6,13,13,6,3,8,18,17,17,17,3,3,3,3,3,3,3,6,13,13,3,3,3,4,3,3,3,16,6,13,13,4,6,13,13,16,8,6,3,3,3,3,3,3,17,3,3,6,6,6,3,3,8,3,6,13,13,6,6,13,13,6,3,6,13,4,6,13,6,6,6,13,13,17,3,13,17,17,17,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,0,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,11,12,11,12,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,10,11,11,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,10,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,2,14,11,11,11,13,11,11,11,11,12,11,11,10,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,13,13,11,13,11,11,11,11,11,11,12,11,11,11,11,11,12,12,13,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,13,13,13,13,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,5,6,6,6,3,3,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["AccountId","AccountIndex","Accounts","Accounts","Accounts","AccountsConfig","Address","AllPallets","AllPalletsReversedWithSystemFirst","AllPalletsWithSystem","AllPalletsWithSystemReversed","AllPalletsWithoutSystem","AllPalletsWithoutSystemReversed","ApprovalDeposit","AssetDeposit","Assets","Assets","Assets","AssetsConfig","Aura","AuraConfig","Balance","Balances","Balances","Balances","BalancesCall","BalancesConfig","Block","BlockExecutionWeight","BlockHashCount","BlockNumber","BuildStorage","CENTS","CONTRACTS_DEBUG_OUTPUT","Call","Contains","Contracts","Contracts","Contracts","DAYS","DOLLARS","DeletionQueueDepth","DeletionWeightLimit","DepositPerByte","DepositPerItem","Detach","Detach","Detach","DetachConfig","Event","Executive","ExistentialDeposit","ExtrinsicBaseWeight","Fragments","Fragments","Fragments","GenesisConfig","Grandpa","Grandpa","Grandpa","GrandpaConfig","HOURS","Hash","Header","IdentificationTuple","Identity","Identity","Identity","IdentityFee","Index","IndexDeposit","Indices","Indices","Indices","IndicesConfig","IsTransferable","KeyOwnerProofSystem","MAX","MILLICENTS","MILLISECS_PER_BLOCK","MINUTES","MaxAdditionalFields","MaxAuthorities","MaxLocks","MaxRegistrars","MetadataDepositBase","MetadataDepositPerByte","MinimumPeriod","Multisig","Multisig","Multisig","MySchedule","OperationalFeeMultiplier","Origin","OriginCaller","PalletInfo","Perbill","Permill","Proof","Protos","Protos","Protos","ProtosCall","Proxy","Proxy","Proxy","Query","Randomness","RandomnessCollectiveFlip","RocksDbWeight","Runtime","RuntimeApi","RuntimeApiImpl","RuntimeBlockLength","RuntimeBlockWeights","SLOT_DURATION","SS58Prefix","Schedule","Signature","SignedExtra","SignedPayload","StorageBytesMultiplier","StorageInfo","StorageValue","StringLimit","Sudo","Sudo","Sudo","SudoConfig","System","System","System","SystemConfig","TicketsAssetId","Timestamp","Timestamp","TimestampCall","TransactionPayment","TransactionPayment","TransactionPaymentConfig","UncheckedExtrinsic","Utility","Utility","Utility","VERSION","Version","Void","WASM_BINARY","WASM_BINARY_BLOATY","WEIGHT_PER_SECOND","Weight","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","account_nonce","accounts","add","add","add","add_assign","add_filter","api","api_version","append","apply_extrinsic","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_signed","assets","assimilate_storage","assimilate_storage","aura","authorities","balances","ban","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_storage","call","caller","check_inherents","check_proof","checked_add","checked_add","checked_add","checked_add","checked_div","checked_mul","checked_mul","checked_mul","checked_sub","checked_sub","checked_sub","checked_sub","classify_dispatch","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","construct_runtime","construct_runtime_api","contains","crate_version","create_transaction","curate","current_set_id","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_from","decode_from","decode_from","decode_len","decode_session_keys","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deconstruct","deconstruct","deconstruct","deconstruct","default","default","default","default","default","defensive_saturating_add","defensive_saturating_add","defensive_saturating_mul","defensive_saturating_mul","defensive_saturating_sub","defensive_saturating_sub","deposit","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","detach","detach","dispatch","dispatch_bypass_filter","dispatch_bypass_filter","dispatch_bypass_filter","dispatch_bypass_filter","div","div","div","div","div","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode","encode","encode","encode_as","encode_as","encode_as","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","ensure_inherents_are_first","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","execute_block","execute_in_transaction","exists","extract_proof","filter_call","finalize_block","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force_transfer","force_unreserve","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_float","from_float","from_float","from_float","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_parts","from_parts","from_parts","from_parts","from_percent","from_percent","from_perthousand","from_perthousand","from_rational","from_rational","from_rational_approximation","from_rational_approximation","from_rational_with_rounding","from_rational_with_rounding","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref_time","generate_key_ownership_proof","generate_session_keys","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get_call_metadata","get_call_name","get_call_name","get_call_name","get_call_names","get_call_names","get_call_names","get_call_names","get_dispatch_info","get_dispatch_info","get_dispatch_info","get_dispatch_info","get_module_names","get_partner_contracts","get_protos","get_storage","grandpa","grandpa_authorities","has_api","has_api_with","hashed_key","host_fn_weights","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","index","indices","inherent_extrinsics","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","initialize_block","instantiate","instruction_weights","int_div","int_div","int_mul","int_mul","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_storage_changes","is_clear","is_clear","is_clear","is_clear","is_one","is_one","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_zero","is_zero","is_zero","is_zero","is_zero","kill","limits","max","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_size","max_value","max_value","max_value","max_value","max_value","max_value","max_values","metadata","metadata","min","min_value","min_value","min_value","min_value","min_value","min_value","module_name","mul","mul","mul","mul","mul","mul","mul","mul_ceil","mul_ceil","mul_floor","mul_floor","mutate","name","native_version","new_call_variant_ban","new_call_variant_curate","new_call_variant_detach","new_call_variant_force_transfer","new_call_variant_force_unreserve","new_call_variant_patch","new_call_variant_set","new_call_variant_set_balance","new_call_variant_set_metadata","new_call_variant_transfer","new_call_variant_transfer","new_call_variant_transfer_all","new_call_variant_transfer_keep_alive","new_call_variant_upload","none","none","offchain_worker","one","one","opaque","pallet_name","pallet_protos","parameter_types","partial_cmp","partial_cmp","partial_cmp","patch","pays_fee","pow","pow","pre_dispatch","prefix","print","proof_recorder","prove","put","query_fee_details","query_info","random","random_seed","record_proof","ref_time","ref_time_mut","reset_filter","root","root","saturating_accrue","saturating_add","saturating_add","saturating_add","saturating_add","saturating_add","saturating_div","saturating_div","saturating_div","saturating_mul","saturating_mul","saturating_mul","saturating_pow","saturating_pow","saturating_pow","saturating_reciprocal_mul","saturating_reciprocal_mul","saturating_reciprocal_mul_ceil","saturating_reciprocal_mul_ceil","saturating_reciprocal_mul_floor","saturating_reciprocal_mul_floor","saturating_sub","saturating_sub","saturating_sub","saturating_sub","saturating_sub","serialize","serialize","serialize","serialize","serialize","set","set","set_balance","set_caller_from","set_metadata","set_ref_time","signed","signed","slot_duration","square","square","storage_name","sub","sub","sub","sub_assign","submit_report_equivocation_unsigned_extrinsic","sudo","system","system","take","tcmp","tcmp","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","transaction_payment","transfer","transfer","transfer_all","transfer_keep_alive","translate","try_add","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_get","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_mutate","try_with_caller","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_from","unique_saturated_from","unique_saturated_from","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","upload","upload_code","using_encoded","using_encoded","using_encoded","validate_transaction","validate_unsigned","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weigh_data","weight_to_fee","zero","zero","zero","zero","zero","zero","amount","dest","dest","dest","dest","keep_alive","new_free","new_reserved","source","value","value","value","who","who","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","amount","category","data","data","data","license","license","linked_asset","metadata_key","new_owner","new_references","proto_hash","proto_hash","proto_hash","proto_hash","proto_hash","proto_hash","references","tags","tags","target_account","target_chain","now","dispatch","Block","BlockId","Header","SessionKeys","UncheckedExtrinsic","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","aura","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_into_raw_public_keys","decode_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","encode","encode_to","encode_to","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from","from_bytes","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","generate","get_raw","grandpa","identity","identity","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_mut","into_raw_public_keys","into_ref","into_ref","is_clear","key_ids","serialize","serialize","size_of","to_keyed_vec","to_keyed_vec","to_owned","to_owned","try_from","try_from","try_into","try_into","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","type_info","type_info","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","using_encoded","vzip","vzip"],"q":["clamor_runtimeclamor_runtime::BalancesCall","","","","","","","","","","","","","","clamor_runtime::Call","","","","","","","","","","","","","","","","clamor_runtime::Event","","","","","","","","","","","","","","","","clamor_runtime::OriginCaller","","clamor_runtime::ProtosCall","","","","","","","","","","","","","","","","","","","","","","clamor_runtime::TimestampCall","clamor_runtime::api","clamor_runtime::opaque","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Some way of identifying an account on the chain. We …","Related to Index pallet","","","","","The address format for describing accounts.","All pallets included in the runtime as a nested tuple of …","All pallets included in the runtime as a nested tuple of …","All pallets included in the runtime as a nested tuple of …","All pallets included in the runtime as a nested tuple of …","All pallets included in the runtime as a nested tuple of …","All pallets included in the runtime as a nested tuple of …","The amount of funds that must be reserved when creating a …","The basic amount of funds that must be reserved for an …","","","","","","","Balance of an account.","","","","Contains one variant per dispatchable that can be called …","","Block type as expected by this runtime.","Time to execute an empty block. Calculated by multiplying …","TODO: Documentation","An index to a block.","Complex storage builder stuff.","TODO: Documentation","Prints debug output of the <code>contracts</code> pallet to stdout if …","","A trait for querying whether a type can be said to “…","","","","Number of blocks that would be added to the Blockchain on …","TODO: Documentation","The maximum number of contracts that can be pending for …","The maximum amount of weight that can be consumed per …","The amount of balance a caller (here “caller” refers …","The amount of balance a caller (here “caller” refers …","","","","","","Executive: handles dispatch to the various modules.","The minimum amount required to keep an account open.","Time to execute a NO-OP extrinsic, for example …","","","","","","","","","Number of blocks that would be added to the Blockchain on …","A hash of some data used by the chain.","Block header type as expected by this runtime.","The full identification of a key owner and the stash …","","","","Implementor of <code>WeightToFee</code> that maps one unit of weight to …","Index of a transaction in the chain.","TODO: Documentation","","","","","","Something which can compute and check proofs of a …","","TODO: Documentation","This determines the average expected block time that we …","Number of blocks that would be added to the Blockchain on …","Maximum number of additional fields that may be stored in …","The maximum number of authorities that <code>pallet_aura</code> can …","The maximum number of locks that should exist on an …","Maxmimum number of registrars allowed in the system. …","The basic amount of funds that must be reserved when …","The additional funds that must be reserved for the number …","TODO: Documentation","","","","Cost schedule and limits.","A fee mulitplier for <code>Operational</code> extrinsics to compute “…","The runtime origin type representing the origin of a call.","","Provides an implementation of <code>PalletInfo</code> to provide …","A fixed point representation of a number in the range [0, 1…","A fixed point representation of a number in the range [0, 1…","The proof of membership itself.","","","","Contains one variant per dispatchable that can be called …","","","","The type that get/take return.","A trait that is able to provide randomness.","","By default, Substrate uses RocksDB, so this will be the …","","","Implements all runtime apis for the client side.","We allow for 2 seconds of compute with a 6 second average …","","Blocks will be produced at a minimum duration defined by …","TODO: Documentation","Definition of the cost schedule and other …","Alias to 512-bit hash when used in the context of a …","The SignedExtension to the basic transaction logic.","The payload being signed in transactions.","Weight for adding a a byte worth of storage in certain …","Metadata about storage from the runtime.","A trait for working with macro-generated storage values …","The maximum length of a name or symbol of an asset stored …","","","","","","","","","","","","Contains one variant per dispatchable that can be called …","","","","Unchecked extrinsic type as expected by this runtime.","","","","To learn more about runtime versioning and what each of …","TODO: Documentation","","","","","","","","","","","","","","","","","","","TODO: Documentation","","","","","","","","","Append the given item to the value in the storage.","TODO: Documentation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Assimilate the storage for this module into pre-existing …","","","TODO: Documentation","","Delete Proto-Fragment <code>proto_hash</code> from all relevant Storage …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Build the storage out of this builder.","TODO: Documentation","","TODO: Documentation","Check a proof of membership on-chain. Return <code>Some</code> iff the …","","","Checked <code>Weight</code> addition. Computes <code>self + rhs</code>, returning …","","Checked <code>Weight</code> scalar division. Computes …","","","Checked <code>Weight</code> scalar multiplication. Computes …","","","","Checked <code>Weight</code> subtraction. Computes <code>self - rhs</code>, returning …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Construct a runtime, with the given name and the given …","","Return <code>true</code> if this “contains” the given value <code>t</code>.","","The code seems long, but what it tries to do is really: - …","Curate, burning tickets on a Proto-Fragment","TODO: Documentation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Read the length of the storage value without decoding the …","TODO: Documentation","","","","","","","","","","","","Consume self and return the number of parts per thing.","See <code>PerThing::deconstruct</code>.","Consume self and return the number of parts per thing.","See <code>PerThing::deconstruct</code>.","","","","","","","","","","","","The amount of balance a caller has to pay for calling an …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<strong>Detach</strong> a <strong>Proto-Fragment</strong> from <strong>this blockchain</strong> to an …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","TODO: Documentation","","Does the value (explicitly) exist in storage?","","","TODO: Documentation","","","","","","","","","","","","","","","Exactly as <code>transfer</code>, except the origin must be root and …","Unreserve some balance from a user by force.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Convert to runtime origin, using as filter: …","Convert to runtime origin with caller being system signed …","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","See <code>PerThing::from_float</code>.","NOTE: saturate to 0 or 1 if x is beyond <code>[0, 1]</code>","See <code>PerThing::from_float</code>.","NOTE: saturate to 0 or 1 if x is beyond <code>[0, 1]</code>","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Build this type from a number of parts per thing.","From an explicitly defined number of parts per maximum of …","Build this type from a number of parts per thing.","From an explicitly defined number of parts per maximum of …","Converts a percent into <code>Self</code>. Equal to <code>x / 100</code>.","Converts a percent into <code>Self</code>. Equal to <code>x / 100</code>.","Converts a percent into <code>Self</code>. Equal to <code>x / 1000</code>.","Converts a percent into <code>Self</code>. Equal to <code>x / 1000</code>.","See <code>PerThing::from_rational</code>.","See <code>PerThing::from_rational</code>.","See <code>PerThing::from_rational</code>.","See <code>PerThing::from_rational</code>.","","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Construct <code>Weight</code> with reference time weight.","TODO: Documentation","TODO: Documentation","Load the value from the provided storage instance.","","","Returns the value of this parameter type.","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","","","","","","","","","","","","","","TODO: Documentation","TODO: Documentation","","TODO: Documentation","","","Get the storage key.","The weights for each imported function a contract is …","","","","","","","","","","","","","","TODO: Documentation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","TODO: Documentation","TODO: Documentation","The weights for individual wasm instructions.","Integer division with another value, rounding down.","Integer division with another value, rounding down.","Integer multiplication with another value, saturating at 1.","Integer multiplication with another value, saturating at 1.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeee <code>PerThing::is_one</code>.","See <code>PerThing::is_one</code>.","","","","","","","","","","","","","","","","","See <code>PerThing::is_zero</code>.","","See <code>PerThing::is_zero</code>.","","","Clear the storage value.","Describes the upper limits on various metrics.","Get the aggressive max of <code>self</code> and <code>other</code> weight.","","","","","The maximum size of key/values in the storage, or none if …","","","","","","","The maximum number of values in the storage, or none if no …","TODO: Documentation","","Get the conservative min of <code>self</code> and <code>other</code> weight.","","","","","","","","","","","","","","","See <code>PerThing::mul_ceil</code>.","See <code>PerThing::mul_ceil</code>.","See <code>PerThing::mul_floor</code>.","See <code>PerThing::mul_floor</code>.","Mutate the value","","The version information is used to identify this runtime …","Create a call with the variant <code>ban</code>.","Create a call with the variant <code>curate</code>.","Create a call with the variant <code>detach</code>.","Create a call with the variant <code>force_transfer</code>.","Create a call with the variant <code>force_unreserve</code>.","Create a call with the variant <code>patch</code>.","Create a call with the variant <code>set</code>.","Create a call with the variant <code>set_balance</code>.","Create a call with the variant <code>set_metadata</code>.","Create a call with the variant <code>transfer</code>.","Create a call with the variant <code>transfer</code>.","Create a call with the variant <code>transfer_all</code>.","Create a call with the variant <code>transfer_keep_alive</code>.","Create a call with the variant <code>upload</code>.","Create with system none origin and …","","TODO: Documentation","See <code>PerThing::one</code>","See <code>PerThing::one</code>","Opaque types. These are used by the CLI to instantiate …","Encoded string of pallet name.","Import the fragments pallet.","Create new implementations of the <code>Get</code> trait.","","","","<strong>Patch</strong> an <strong>existing Proto-Fragment</strong> (<em>by appending the hash of </em>…","","","","","The prefix of the storage. All keys after the prefix are …","","","Prove membership of a key owner in the current block-state.","Store a value under this key into the provided storage …","TODO: Documentation","TODO: Documentation","Get the most recently determined random seed, along with …","Get the basic random seed.","","Return the reference time part of the weight.","Return a mutable reference time part of the weight.","","","Create with system root origin and …","Increment <code>Weight</code> by <code>amount</code> via saturating addition.","","Saturating addition. Compute <code>self + rhs</code>, saturating at the …","","Saturating addition. Compute <code>self + rhs</code>, saturating at the …","Saturating <code>Weight</code> addition. Computes <code>self + rhs</code>, …","Saturating division. Compute <code>self / rhs</code>, saturating at one …","Saturating division. Compute <code>self / rhs</code>, saturating at one …","Saturating <code>Weight</code> scalar division. Computes …","Saturating multiply. Compute <code>self * rhs</code>, saturating at the …","Saturating multiply. Compute <code>self * rhs</code>, saturating at the …","Saturating <code>Weight</code> scalar multiplication. Computes …","Saturating exponentiation. Computes <code>self.pow(exp)</code>, …","Saturating exponentiation. Computes <code>self.pow(exp)</code>, …","Saturating <code>Weight</code> scalar exponentiation. Computes …","See <code>PerThing::saturating_reciprocal_mul</code>.","See <code>PerThing::saturating_reciprocal_mul</code>.","See <code>PerThing::saturating_reciprocal_mul_ceil</code>.","See <code>PerThing::saturating_reciprocal_mul_ceil</code>.","See <code>PerThing::saturating_reciprocal_mul_floor</code>.","See <code>PerThing::saturating_reciprocal_mul_floor</code>.","Saturating subtraction. Compute <code>self - rhs</code>, saturating at …","","","Saturating subtraction. Compute <code>self - rhs</code>, saturating at …","Saturating <code>Weight</code> subtraction. Computes <code>self - rhs</code>, …","","","","","","Store a value under this key into the provided storage …","Set the current time.","Set the balances of a given account.","","<strong>Alters</strong> the <strong>metadata</strong> of a <strong>Proto-Fragment</strong> (whose hash is …","Set the reference time part of the weight.","Create with system signed origin and …","","TODO: Documentation","See <code>PerThing::square</code>.","See <code>PerThing::square</code>.","Encoded string of storage name.","","","","","TODO: Documentation","","","","Take a value from storage, removing it afterwards.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<strong>Transfer</strong> the <strong>ownership</strong> of a <strong>Proto-Fragment</strong> from <strong><code>origin</code></strong> to …","Transfer some liquid free balance to another account.","Transfer the entire transferable balance from the caller …","Same as the <code>transfer</code> call, but with a check that the …","Translate a value from some previous type (<code>O</code>) to the …","Try to add some <code>other</code> weight while upholding the <code>limit</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Try to get the underlying value from the provided storage …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Mutate the value if closure returns <code>Ok</codestrong>Upload</strong> a <strong>Proto-Fragment</strong> onto the <strong>Blockchain</strong>. Furthermore, …","TODO: Documentation","","","","TODO: Documentation","","TODO: Documentation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","See <code>PerThing::zero</code>.","","See <code>PerThing::zero</code>.","","Return a <code>Weight</code> where all fields are zero.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Opaque block type.","Opaque block identifier type.","Opaque block header type.","TODO: Documentation","Simple blob to hold an extrinsic without committing to its …","","","","","","","TODO: Documentation","","","","","","","","","","","","","","","","","","","","","","Decode <code>Self</code> from the given <code>encoded</code> slice and convert <code>Self</code> …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Convert an encoded extrinsic to an <code>OpaqueExtrinsic</code>.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Generate a set of keys with optionally using the given …","","TODO: Documentation","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Converts <code>Self</code> into a <code>Vec</code> of <code>(raw public key, KeyTypeId)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,35,39,0,0,0,0,0,0,0,0,0,0,0,35,39,0,0,0,0,0,35,39,0,0,0,0,0,0,0,0,0,0,0,0,35,39,0,0,0,0,0,0,0,35,39,0,0,0,0,0,0,35,39,0,0,35,39,0,0,0,0,143,0,35,39,0,0,0,0,35,39,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,35,39,0,0,0,0,0,0,0,143,0,35,39,0,0,35,39,144,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35,39,0,0,35,39,0,0,0,39,0,0,35,0,0,0,35,39,0,0,38,0,0,0,0,33,34,35,36,37,7,38,39,4,5,40,41,6,34,21,4,5,6,6,7,0,11,144,34,33,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,34,35,36,37,7,38,39,21,172,11,4,5,40,173,41,174,175,176,6,33,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,34,35,36,37,7,38,39,21,172,11,4,5,40,173,41,174,175,176,6,7,21,177,21,21,34,21,36,33,35,36,37,38,39,4,5,40,41,6,33,35,36,37,38,39,4,5,40,41,6,33,35,36,37,38,39,4,5,40,41,6,33,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,34,35,36,37,7,38,39,21,172,11,4,5,40,173,41,174,175,176,6,33,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,34,35,36,37,7,38,39,21,172,11,4,5,40,173,41,174,175,176,6,177,34,7,34,143,4,5,6,6,6,4,5,6,4,5,6,6,6,4,5,40,6,33,34,35,36,37,7,38,39,4,5,40,41,6,33,34,35,36,37,7,38,39,4,5,40,41,6,4,5,6,0,172,178,171,34,36,34,33,35,36,37,38,39,4,5,40,41,6,33,35,36,37,38,39,4,5,40,41,6,33,35,36,37,38,39,4,5,40,41,6,4,5,6,144,34,33,35,36,37,38,39,4,5,40,41,6,4,4,5,5,21,4,5,40,6,4,5,4,5,4,5,0,33,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,34,35,36,37,7,38,39,21,172,11,4,5,40,173,41,174,175,176,6,33,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,34,35,36,37,7,38,39,21,172,11,4,5,40,173,41,174,175,176,6,21,4,5,40,6,21,36,39,33,36,37,39,4,4,5,5,6,33,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,34,35,36,37,7,38,39,21,172,11,4,5,40,173,41,174,175,176,6,4,5,6,4,5,6,33,35,36,37,38,39,4,5,40,41,6,34,33,34,35,36,37,38,39,4,5,40,41,6,33,34,35,36,37,38,39,4,5,40,41,6,34,11,144,11,7,34,33,34,35,36,37,7,38,39,4,5,40,41,6,6,37,37,33,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,34,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,36,37,7,7,7,7,38,38,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,21,172,11,4,4,5,5,40,173,41,174,175,176,6,6,4,4,5,5,33,33,145,145,146,146,147,147,148,148,149,149,150,150,151,151,152,152,153,153,154,154,155,155,156,156,157,157,158,158,159,159,160,160,161,161,162,162,163,163,164,164,165,165,166,166,167,167,168,168,169,169,170,170,171,171,34,34,35,35,36,36,37,37,7,7,38,38,39,39,21,21,172,172,11,11,4,4,5,5,40,40,173,173,41,41,174,174,175,175,176,176,6,6,4,4,5,5,4,5,4,5,4,5,4,5,4,5,33,33,145,145,146,146,147,147,148,148,149,149,150,150,151,151,152,152,153,153,154,154,155,155,156,156,157,157,158,158,159,159,160,160,161,161,162,162,163,163,164,164,165,165,166,166,167,167,168,168,169,169,170,170,171,171,34,34,35,35,36,36,37,37,7,7,38,38,39,39,21,21,172,172,11,11,4,4,5,5,40,40,173,173,41,41,174,174,175,175,176,176,6,6,6,34,34,144,145,145,145,146,146,146,147,147,147,148,148,148,149,149,149,150,150,150,151,151,151,152,152,152,153,153,153,154,154,154,155,155,155,156,156,156,157,157,157,158,158,158,159,159,159,160,160,160,161,161,161,162,162,162,163,163,163,164,164,164,165,165,165,166,166,166,167,167,167,168,168,168,169,169,169,170,170,170,174,174,174,175,175,175,176,176,176,39,33,36,37,33,36,37,39,33,36,37,39,39,34,34,34,21,34,11,11,144,40,33,35,36,37,38,39,4,5,40,41,6,171,21,34,33,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,34,35,36,37,7,38,39,21,172,11,4,5,40,173,41,174,175,176,6,34,34,40,4,5,4,5,33,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,34,35,36,37,7,38,39,21,172,11,4,5,40,173,41,174,175,176,6,33,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,34,35,36,37,7,38,39,21,172,11,4,5,40,173,41,174,175,176,6,33,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,34,35,36,37,38,39,21,172,11,4,5,40,173,41,174,175,176,6,33,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,34,35,36,37,7,38,39,21,172,11,4,5,40,173,41,174,175,176,6,33,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,34,35,36,37,7,38,39,21,172,11,4,5,40,173,41,174,175,176,6,33,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,34,35,36,37,7,38,39,21,172,11,4,5,40,173,41,174,175,176,6,11,4,5,40,6,4,5,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,4,4,5,5,6,144,40,6,38,4,5,6,41,4,4,5,5,6,6,41,34,34,6,4,4,5,5,6,6,171,4,4,4,5,5,5,6,4,5,4,5,144,171,0,36,36,36,37,37,36,33,37,36,36,37,37,37,36,7,7,34,4,5,0,41,0,0,4,5,6,36,6,4,5,34,41,6,11,143,144,34,34,179,179,11,6,6,7,7,7,6,4,4,5,5,6,4,5,6,4,5,6,4,5,6,4,5,4,5,4,5,4,4,5,5,6,21,4,5,40,6,144,33,37,7,36,6,7,7,34,4,5,41,4,5,6,6,34,21,21,38,144,4,5,33,35,36,37,38,39,4,5,40,41,6,33,34,35,36,37,7,38,39,4,5,40,41,6,6,21,36,37,37,37,144,6,33,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,34,35,36,37,7,38,39,21,172,11,4,5,40,173,41,174,175,176,6,144,33,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,34,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,36,37,7,38,39,21,172,11,4,5,40,173,41,174,175,176,6,144,7,33,35,36,37,38,39,4,5,40,41,6,33,35,36,37,38,39,4,5,40,41,6,33,35,36,37,38,39,4,5,40,41,6,33,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,34,35,36,37,7,38,39,21,172,11,4,5,40,173,41,174,175,176,6,33,34,35,36,37,38,39,4,5,40,6,33,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,34,35,36,37,7,38,39,21,172,11,4,5,40,173,41,174,175,176,6,4,5,6,33,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,34,35,36,37,7,38,39,21,172,11,4,5,40,173,41,174,175,176,6,36,34,4,5,6,34,34,34,33,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,34,35,36,37,7,38,39,21,172,11,4,5,40,173,41,174,175,176,6,6,173,4,4,5,5,6,6,180,181,182,183,184,184,185,185,182,181,182,183,185,180,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,221,222,223,221,222,221,223,224,222,222,224,223,225,220,226,221,221,222,225,225,227,0,0,0,0,0,0,138,139,138,139,138,139,138,138,139,138,139,138,139,138,139,138,139,139,138,139,138,139,138,139,138,139,138,139,138,138,139,139,138,139,138,139,138,139,138,139,139,138,139,138,139,138,139,138,139,138,139,139,139,138,138,139,139,138,138,139,139,138,138,138,138,139,138,139,138,139,138,139,138,139,138,139,138,139,138,138,139,139,138,138,139,139,138,139,138,139,138,139,138,139,138,139,138,139,138,139,138,139,138,139,138,139,138,139,139,138,139],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[2,3],0,[[4,4]],[[5,5]],[[6,6],6],[[6,6]],[[7,8]],0,[[[11,[9,[10,[9]]]],12],[[16,[[14,[13]],15]]]],[[]],[[],17],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[7,14],0,[19,[[16,[20]]]],[[21,19],[[16,[20]]]],0,[[],[[23,[22]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[23,[24,25]]]],[[],[[23,[24,25]]]],[[],[[23,[24,25]]]],[[],[[23,[24,25]]]],[[],[[23,[24,25]]]],[[],[[23,[24,25]]]],[[],[[23,[24,25]]]],[[],[[23,[24,25]]]],[[],[[23,[24,25]]]],[[],[[23,[24,25]]]],[[],[[23,[24,25]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[16,[19,20]]]],[[2,2,26,27,[14,[26]],[23,[24]]],[[28,[26]]]],[7],[[29,30],31],[[],14],[[4,4],[[14,[4]]]],[[5,5],[[14,[5]]]],[[6,6],[[14,[6]]]],[[6,6],[[14,[6]]]],[[6,27],[[14,[6]]]],[[4,4],[[14,[4]]]],[[5,5],[[14,[5]]]],[[6,27],[[14,[6]]]],[[4,4],[[14,[4]]]],[[5,5],[[14,[5]]]],[[6,6],[[14,[6]]]],[[6,6],[[14,[6]]]],[6,32],[[]],[[]],[[]],[[]],[33,33],[34,34],[35,35],[36,36],[37,37],[7,7],[38,38],[39,39],[4,4],[5,5],[40,40],[41,41],[6,6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[4,4],42],[[5,5],42],[[6,6],42],0,[[],43],[[],44],[[],[[14,[45]]]],[[39,2,3],14],0,[[],46],[[],[[16,[33,47]]]],[[],[[16,[35,47]]]],[[],[[16,[36,47]]]],[[],[[16,[37,47]]]],[[],[[16,[38,47]]]],[[],[[16,[39,47]]]],[[],[[16,[4,47]]]],[[],[[16,[5,47]]]],[[],[[16,[40,47]]]],[[],[[16,[41,47]]]],[[],[[16,[6,47]]]],[[],[[16,[47]]]],[[],[[16,[47]]]],[[],[[16,[47]]]],[[],[[16,[47]]]],[[],[[16,[47]]]],[[],[[16,[47]]]],[[],[[16,[47]]]],[[],[[16,[47]]]],[[],[[16,[47]]]],[[],[[16,[47]]]],[[],[[16,[47]]]],[13,[[16,[47]]]],[13,[[16,[47]]]],[13,[[16,[47]]]],[13,[[16,[47]]]],[13,[[16,[47]]]],[13,[[16,[47]]]],[13,[[16,[47]]]],[13,[[16,[47]]]],[13,[[16,[47]]]],[13,[[16,[47]]]],[13,[[16,[47]]]],[[],[[16,[4,47]]]],[[],[[16,[5,47]]]],[27,[[16,[6,47]]]],[[],[[14,[48]]]],[[[23,[24]]],[[14,[23]]]],[13,[[16,[47]]]],[13,[[16,[47]]]],[13,[[16,[47]]]],[13,[[16,[47]]]],[13,[[16,[47]]]],[13,[[16,[47]]]],[13,[[16,[47]]]],[13,[[16,[47]]]],[13,[[16,[47]]]],[13,[[16,[47]]]],[13,[[16,[47]]]],[4],[4,13],[5],[5,13],[[],21],[[],4],[[],5],[[],40],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[13,13],26],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[[],[[16,[21]]]],[[],[[16,[4]]]],[[],[[16,[5]]]],[[],[[16,[40]]]],[[],[[16,[6]]]],0,0,[[39,7],49],[33,[[16,[50,[51,[50]]]]]],[36,[[16,[50,[51,[50]]]]]],[37,[[16,[50,[51,[50]]]]]],[[39,7],49],[[4,4]],[4],[[5,5]],[5],[6,6],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[4,[[23,[24,25]]]],[5,[[23,[24,25]]]],[6,[[23,[24,25]]]],[4],[5],[6,27],[33],[35],[36],[37],[38],[39],[4],[5],[40],[41],[6],[29,[[16,[13]]]],[[33,33],44],[[34,34],44],[[35,35],44],[[36,36],44],[[37,37],44],[[38,38],44],[[39,39],44],[[4,4],44],[[5,5],44],[[40,40],44],[[41,41],44],[[6,6],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[29],[[[11,[9,[10,[9]]]],52]],[[],44],[[[11,[9,[10,[9]]]]],[[14,[53]]]],[7,44],[[]],[[33,54],[[16,[55]]]],[[34,54],56],[[35,54],56],[[36,54],[[16,[55]]]],[[37,54],[[16,[55]]]],[[7,54],[[16,[55]]]],[[38,54],56],[[39,54],56],[[4,54],[[16,[55]]]],[[5,54],[[16,[55]]]],[[40,54],[[16,[55]]]],[[41,54],[[16,[55]]]],[[6,54],[[16,[55]]]],[[6,54],[[16,[55]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[57,[34]]],35],[[[58,[34]]],35],[[[59,[34]]],35],[[[60,[34]]],35],[[[61,[34]]],35],[62,35],[[[63,[34]]],35],[[[64,[34]]],35],[[[65,[34]]],35],[[[66,[34]]],35],[67,35],[[[68,[34]]],35],[[[69,[34]]],35],[[[70,[34]]],35],[[[71,[34]]],35],[[[72,[34]]],35],[[]],[[]],[[]],[38,7],[[]],[[[73,[34]]],7],[14,7],[[[73,[34]]],38],[[]],[[[75,[74,34]]],39],[[[75,[76,34]]],39],[[[75,[77,34]]],39],[[[75,[78,34]]],39],[[[75,[79,34]]],39],[[[75,[80,34]]],39],[[[75,[81,34]]],39],[[]],[[[75,[82,34]]],39],[[[75,[83,34]]],39],[[[75,[84,34]]],39],[[[75,[85,34]]],39],[[[75,[86,34]]],39],[[[75,[87,34]]],39],[[[75,[88,34]]],39],[[[75,[89,34]]],39],[[[75,[90,34]]],39],[[]],[[]],[[]],[[[91,[4]]],4],[[]],[[[91,[5]]],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[91,[6]]],6],[92,4],[92,4],[92,5],[92,5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[13,4],[[],5],[13,5],[13,4],[13,5],[13,4],[13,5],[[],4],[[],5],[[],4],[[],5],[93,[[16,[4]]]],[93,[[16,[5]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[27,6],[[46,94],[[14,[95]]]],[[[14,[[23,[24]]]]],[[23,[24]]]],[[]],[[],96],[[],[[97,[96]]]],[[],96],[[],98],[[],98],[[],[[97,[98]]]],[[],24],[[],[[97,[24]]]],[[],24],[[],99],[[],[[97,[99]]]],[[],99],[[],100],[[],100],[[],[[97,[100]]]],[[],13],[[],13],[[],[[97,[13]]]],[[],27],[[],[[97,[27]]]],[[],27],[[],101],[[],[[97,[101]]]],[[],101],[[],[[97,[13]]]],[[],13],[[],13],[[],44],[[],44],[[],[[97,[44]]]],[[],26],[[],26],[[],[[97,[26]]]],[[],26],[[],[[97,[26]]]],[[],26],[[],13],[[],13],[[],[[97,[13]]]],[[],6],[[],[[97,[6]]]],[[],6],[[],[[40,[34]]]],[[],[[97,[[40,[34]]]]]],[[],[[40,[34]]]],[[],[[97,[24]]]],[[],24],[[],24],[[],[[97,[27]]]],[[],27],[[],27],[[],27],[[],27],[[],[[97,[27]]]],[[],13],[[],[[97,[13]]]],[[],13],[[],13],[[],13],[[],[[97,[13]]]],[[],26],[[],[[97,[26]]]],[[],26],[[],26],[[],[[97,[26]]]],[[],26],[[],26],[[],26],[[],[[97,[26]]]],[[],[[97,[13]]]],[[],13],[[],13],[[],[[97,[26]]]],[[],26],[[],26],[[],26],[[],26],[[],[[97,[26]]]],[[]],[[],6],[[],6],[[]],[[],6],[[],6],[[],102],[[],102],[[]],[39,103],[33,104],[36,104],[37,104],[[]],[[]],[[]],[104],[33,105],[36,105],[37,105],[39,105],[[]],[[],[[23,[20]]]],[[[106,[2,[23,[24]]]]],[[16,[[23,[24]],[23,[24]]]]]],[[2,[23,[24]]],107],0,[[],108],[[[11,[9,[10,[9]]]],12],[[16,[44,15]]]],[[[11,[9,[10,[9]]]],12,8],[[16,[44,15]]]],[[]],0,[[],[[23,[24,25]]]],[[],[[23,[24,25]]]],[[],[[23,[24,25]]]],[[],[[23,[24,25]]]],[[],[[23,[24,25]]]],[[],[[23,[24,25]]]],[[],[[23,[24,25]]]],[[],[[23,[24,25]]]],[[],[[23,[24,25]]]],[[],[[23,[24,25]]]],[[],[[23,[24,25]]]],[[],[[14,[48]]]],0,[30,23],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[]],[[2,26,27,[14,[26]],[110,[109]],[23,[24]],[23,[24]]],[[111,[2,26]]]],0,[[4,4],13],[[5,5],13],[[4,13],4],[[5,13],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[112,[25]]],[[112,[18,25]]]],[[[112,[25]]],[[112,[18,25]]]],[[[112,[25]]],[[112,[18,25]]]],[[[112,[25]]],[[112,[18,25]]]],[[[112,[25]]],[[112,[18,25]]]],[[[112,[25]]],[[112,[18,25]]]],[[[112,[25]]],[[112,[18,25]]]],[[[112,[25]]],[[112,[18,25]]]],[[[112,[25]]],[[112,[18,25]]]],[[[112,[25]]],[[112,[18,25]]]],[[[112,[25]]],[[112,[18,25]]]],[[[112,[25]]],[[112,[18,25]]]],[[[112,[25]]],[[112,[18,25]]]],[[[112,[25]]],[[112,[18,25]]]],[[[112,[25]]],[[112,[18,25]]]],[[[112,[25]]],[[112,[18,25]]]],[[[112,[25]]],[[112,[18,25]]]],[[[112,[25]]],[[112,[18,25]]]],[[[112,[25]]],[[112,[18,25]]]],[[[112,[25]]],[[112,[18,25]]]],[[[112,[25]]],[[112,[18,25]]]],[[[112,[25]]],[[112,[18,25]]]],[[[112,[25]]],[[112,[18,25]]]],[[[112,[25]]],[[112,[18,25]]]],[[[112,[25]]],[[112,[18,25]]]],[[[112,[25]]],[[112,[18,25]]]],[[[112,[25]]],[[112,[18,25]]]],[[[112,[25]]],[[112,[18,25]]]],[[[112,[25]]],[[112,[18,25]]]],[[[112,[25]]],[[112,[18,25]]]],[[[112,[25]]],[[112,[18,25]]]],[[[112,[25]]],[[112,[18,25]]]],[[[112,[25]]],[[112,[18,25]]]],[[[112,[25]]],[[112,[18,25]]]],[[[112,[25]]],[[112,[18,25]]]],[[[112,[25]]],[[112,[18,25]]]],[[[112,[25]]],[[112,[18,25]]]],[[[112,[25]]],[[112,[18,25]]]],[[[112,[25]]],[[112,[18,25]]]],[[[112,[25]]],[[112,[18,25]]]],[[[112,[25]]],[[112,[18,25]]]],[[[112,[25]]],[[112,[18,25]]]],[[[112,[25]]],[[112,[18,25]]]],[[[112,[25]]],[[112,[18,25]]]],[[[112,[25]]],[[112,[18,25]]]],[[[112,[25]]],[[112,[18,25]]]],[[[112,[25]]],[[112,[18,25]]]],[113,[[113,[18]]]],[113,[[113,[18]]]],[113,[[113,[18]]]],[113,[[113,[18]]]],[113,[[113,[18]]]],[113,[[113,[18]]]],[113,[[113,[18]]]],[113,[[113,[18]]]],[113,[[113,[18]]]],[113,[[113,[18]]]],[113,[[113,[18]]]],[113,[[113,[18]]]],[113,[[113,[18]]]],[113,[[113,[18]]]],[113,[[113,[18]]]],[113,[[113,[18]]]],[113,[[113,[18]]]],[113,[[113,[18]]]],[113,[[113,[18]]]],[113,[[113,[18]]]],[113,[[113,[18]]]],[113,[[113,[18]]]],[113,[[113,[18]]]],[113,[[113,[18]]]],[113,[[113,[18]]]],[113,[[113,[18]]]],[113,[[113,[18]]]],[113,[[113,[18]]]],[113,[[113,[18]]]],[113,[[113,[18]]]],[113,[[113,[18]]]],[113,[[113,[18]]]],[113,[[113,[18]]]],[113,[[113,[18]]]],[113,[[113,[18]]]],[113,[[113,[18]]]],[113,[[113,[18]]]],[113,[[113,[18]]]],[113,[[113,[18]]]],[113,[[113,[18]]]],[113,[[113,[18]]]],[113,[[113,[18]]]],[113,[[113,[18]]]],[113,[[113,[18]]]],[113,[[113,[18]]]],[113,[[113,[18]]]],[114,[[114,[18]]]],[114,[[114,[18]]]],[114,[[114,[18]]]],[114,[[114,[18]]]],[114,[[114,[18]]]],[114,[[114,[18]]]],[114,[[114,[18]]]],[114,[[114,[18]]]],[114,[[114,[18]]]],[114,[[114,[18]]]],[114,[[114,[18]]]],[114,[[114,[18]]]],[114,[[114,[18]]]],[114,[[114,[18]]]],[114,[[114,[18]]]],[114,[[114,[18]]]],[114,[[114,[18]]]],[114,[[114,[18]]]],[114,[[114,[18]]]],[114,[[114,[18]]]],[114,[[114,[18]]]],[114,[[114,[18]]]],[114,[[114,[18]]]],[114,[[114,[18]]]],[114,[[114,[18]]]],[114,[[114,[18]]]],[114,[[114,[18]]]],[114,[[114,[18]]]],[114,[[114,[18]]]],[114,[[114,[18]]]],[114,[[114,[18]]]],[114,[[114,[18]]]],[114,[[114,[18]]]],[114,[[114,[18]]]],[114,[[114,[18]]]],[114,[[114,[18]]]],[114,[[114,[18]]]],[114,[[114,[18]]]],[114,[[114,[18]]]],[114,[[114,[18]]]],[114,[[114,[18]]]],[114,[[114,[18]]]],[114,[[114,[18]]]],[114,[[114,[18]]]],[114,[[114,[18]]]],[114,[[114,[18]]]],[114,[[114,[18]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[11,[9,[10,[9]]]]],[[16,[[115,[9]],20]]]],[[],44],[[],44],[[],44],[[],44],[4,44],[5,44],[39,[[14,[75]]]],[39,[[14,[75]]]],[39,[[14,[75]]]],[39,[[14,[75]]]],[39,[[14,[75]]]],[39,[[14,[75]]]],[39,[[14,[75]]]],[39,[[14,[75]]]],[39,[[14,[75]]]],[39,[[14,[75]]]],[39,[[14,[75]]]],[39,[[14,[75]]]],[39,[[14,[75]]]],[39,[[14,[75]]]],[39,[[14,[75]]]],[39,[[14,[75]]]],[4,44],[4,44],[5,44],[5,44],[6,44],[[]],0,[[6,6],6],[[],48],[[],48],[[],48],[[],48],0,[[],4],[[]],[[]],[[],5],[[]],[[],6],0,[[],116],[[],117],[[6,6],6],[[]],[[],4],[[]],[[],5],[[],6],[[]],[[],[[14,[104]]]],[[4,4]],[4],[[4,6],6],[5],[[5,5]],[[5,6],6],[6,6],[4],[5],[4],[5],[[]],[[],[[14,[104]]]],[[],118],[[],36],[[],36],[[119,[23,[24,25]]],36],[[],37],[[],37],[[[14,[120]],[23,[25]],[14,[[23,[[23,[24,25]],25]]]],[23,[24,25]]],36],[[],33],[[],37],[[[23,[24,25]],[23,[24,25]]],36],[[],36],[[],37],[44,37],[[],37],[[[23,[25]],121,[23,[[23,[24,25]],25]],[14,[122]],120,[23,[24,25]]],36],[[],7],[[],7],[[]],[[],4],[[],5],0,0,0,0,[[4,4],[[14,[42]]]],[[5,5],[[14,[42]]]],[[6,6],[[14,[42]]]],0,[6,123],[[4,48]],[[5,48]],[[],[[16,[124]]]],0,[6],[[[11,[9,[10,[9]]]]],[[14,[[125,[9]]]]]],[[],14],[[]],[13,[[126,[26]]]],[13,[[127,[26]]]],[[]],[[]],[[[11,[9,[10,[9]]]]]],[6,27],[6,27],[7],[[],7],[[],7],[[6,6]],[[4,4],4],[[4,4],4],[[5,5],5],[[5,5],5],[[6,6],6],[[4,4,93],4],[[5,5,93],5],[[6,27],6],[[4,4],4],[[5,5],5],[[6,27],6],[[4,48],4],[[5,48],5],[[6,13],6],[4],[5],[4],[5],[4],[5],[[4,4],4],[[4,4],4],[[5,5],5],[[5,5],5],[[6,6],6],[21,16],[4,16],[5,16],[40,16],[6,16],[[]],0,0,[[7,[128,[7]]]],0,[[6,27],6],[[],7],[[],7],[[],129],[4,4],[5,5],0,[[4,4]],[[5,5]],[[6,6],6],[[6,6]],[[[131,[[130,[29]]]],95],14],0,0,0,[[]],[[],42],[[],42],[[],[[23,[24,25]]]],[[],[[23,[24,25]]]],[[],[[23,[24,25]]]],[[],[[23,[24,25]]]],[[],[[23,[24,25]]]],[[],[[23,[24,25]]]],[[],[[23,[24,25]]]],[[],[[23,[24,25]]]],[[],[[23,[24,25]]]],[[],[[23,[24,25]]]],[[],[[23,[24,25]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],0,0,0,0,0,[[],[[16,[14]]]],[[6,6,6],[[14,[6]]]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[35,[[16,[[61,[34]]]]]],[35,[[16,[[71,[34]]]]]],[35,[[16,[[60,[34]]]]]],[35,[[16,[67]]]],[35,[[16,[[64,[34]]]]]],[35,[[16,[[69,[34]]]]]],[35,[[16,[[68,[34]]]]]],[[],16],[35,[[16,[[66,[34]]]]]],[35,[[16,[[65,[34]]]]]],[35,[[16,[[57,[34]]]]]],[35,[[16,[[63,[34]]]]]],[35,[[16,[[59,[34]]]]]],[35,[[16,[[58,[34]]]]]],[35,[[16,[[70,[34]]]]]],[35,[[16,[62]]]],[35,[[16,[[72,[34]]]]]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[7,52],[[16,[7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[23,[24,25]]]],[[],[[23,[24,25]]]],[[],[[23,[24,25]]]],[[],[[23,[24,25]]]],[[],[[23,[24,25]]]],[[],[[23,[24,25]]]],[[],[[23,[24,25]]]],[[],[[23,[24,25]]]],[[],[[23,[24,25]]]],[[],[[23,[24,25]]]],[[],[[23,[24,25]]]],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],[[134,[133]]]],[[],134],[[],134],[[],[[134,[133]]]],[[],[[134,[133]]]],[[],134],[[],134],[[],[[134,[133]]]],[[],[[134,[133]]]],[[],[[134,[133]]]],[[],[[134,[133]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[2,[23,[24]],[14,[26]]],[[135,[109,26]]]],[4],[5],[6],[136,137],[136,137],[[],96],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6,6],[6],[[],4],[[],4],[[],5],[[],5],[[],6],[[],6],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[104,[[14,[[23,[24]]]]]],0,0,0,0,0,[1],[1],[[],18],[[],18],[[],18],[[],18],0,[[]],[[]],[[],[[23,[24,25]]]],[[],[[23,[24,25]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[138,138],[139,139],[[]],[[]],[[],[[16,[138,47]]]],[[],[[16,[139,47]]]],[[],[[16,[47]]]],[[],[[16,[47]]]],[13,[[16,[47]]]],[13,[[16,[47]]]],[[],[[14,[23]]]],[13,[[16,[47]]]],[13,[[16,[47]]]],[[],139],[48],[48],[48],[48],[[],[[16,[138]]]],[[],[[16,[139]]]],[48],[48],[139,[[23,[24,25]]]],[138],[139],[[138,138],44],[[139,139],44],[[],44],[[],44],[[138,54],56],[[139,54],[[16,[55]]]],[[]],[[]],[140,139],[[],[[16,[139,47]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[14,[[23,[24]]]]],[[23,[24]]]],[[138,141]],0,[[],[[23,[24,25]]]],[[],[[23,[24,25]]]],[[],48],[[],48],[[]],[[]],[[[112,[25]]],[[112,[18,25]]]],[[[112,[25]]],[[112,[18,25]]]],[113,[[113,[18]]]],[113,[[113,[18]]]],[114,[[114,[18]]]],[114,[[114,[18]]]],[[]],[[]],[138,23],[[]],[[]],[[],44],[[]],[138,16],[139,16],[[139,142],48],[[],[[23,[24,25]]]],[[],[[23,[24,25]]]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[],[[23,[24,25]]]],[[],[[23,[24,25]]]],[[],132],[[],132],[[],134],[[],[[134,[133]]]],[[]],[[]],[[]],[[]],[139],[[]],[[]]],"p":[[3,"Private"],[6,"AccountId"],[6,"Index"],[3,"Permill"],[3,"Perbill"],[3,"Weight"],[3,"Origin"],[8,"Fn"],[8,"Block"],[8,"CallApiAt"],[3,"RuntimeApiImpl"],[4,"BlockId"],[15,"u32"],[4,"Option"],[4,"ApiError"],[4,"Result"],[6,"ApplyExtrinsicResult"],[8,"Any"],[3,"Storage"],[3,"String"],[3,"GenesisConfig"],[6,"AuthorityId"],[3,"Vec"],[15,"u8"],[3,"Global"],[6,"Balance"],[15,"u64"],[6,"ContractExecResult"],[6,"Block"],[3,"InherentData"],[3,"CheckInherentsResult"],[4,"DispatchClass"],[4,"TimestampCall"],[3,"Runtime"],[4,"Event"],[4,"ProtosCall"],[4,"BalancesCall"],[4,"OriginCaller"],[4,"Call"],[3,"Schedule"],[3,"StorageInfo"],[4,"Ordering"],[3,"ApiRef"],[15,"bool"],[3,"CrateVersion"],[6,"SetId"],[3,"Error"],[15,"usize"],[6,"DispatchResultWithPostInfo"],[3,"PostDispatchInfo"],[3,"DispatchErrorWithPostInfo"],[8,"FnOnce"],[3,"StorageProof"],[3,"Formatter"],[3,"Error"],[6,"Result"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[6,"Origin"],[6,"Contracts"],[6,"CallableCallFor"],[6,"Utility"],[6,"Accounts"],[6,"Proxy"],[6,"Protos"],[6,"System"],[6,"Detach"],[6,"Multisig"],[6,"Identity"],[6,"Assets"],[6,"Fragments"],[6,"Timestamp"],[6,"Sudo"],[6,"Balances"],[6,"Indices"],[6,"Grandpa"],[3,"Compact"],[15,"f64"],[4,"Rounding"],[6,"AuthorityId"],[3,"OpaqueKeyOwnershipProof"],[3,"RuntimeVersion"],[8,"From"],[6,"BlockNumber"],[3,"BlockLength"],[3,"BlockWeights"],[15,"u128"],[3,"RuntimeDbWeight"],[3,"CallMetadata"],[15,"str"],[3,"DispatchInfo"],[3,"GetProtosParams"],[6,"GetStorageResult"],[6,"AuthorityList"],[6,"Hash"],[4,"Code"],[6,"ContractInstantiateResult"],[3,"Box"],[3,"Arc"],[3,"Rc"],[6,"StorageChanges"],[3,"OpaqueMetadata"],[3,"RuntimeMetadataPrefixed"],[3,"NativeVersion"],[4,"SupportedChains"],[4,"UsageLicense"],[4,"Categories"],[4,"LinkedAsset"],[4,"Pays"],[4,"TransactionValidityError"],[6,"ProofRecorder"],[3,"FeeDetails"],[3,"RuntimeDispatchInfo"],[8,"Into"],[3,"SlotDuration"],[6,"NumberFor"],[3,"EquivocationProof"],[3,"TypeId"],[4,"MetaForm"],[3,"Type"],[6,"CodeUploadResult"],[4,"TransactionSource"],[6,"TransactionValidity"],[3,"SessionKeys"],[3,"UncheckedExtrinsic"],[3,"UncheckedExtrinsic"],[3,"KeyTypeId"],[3,"MallocSizeOfOps"],[8,"KeyOwnerProofSystem"],[8,"StorageValue"],[3,"Version"],[3,"BlockHashCount"],[3,"SS58Prefix"],[3,"RuntimeBlockLength"],[3,"RuntimeBlockWeights"],[3,"MaxAuthorities"],[3,"MinimumPeriod"],[3,"ExistentialDeposit"],[3,"MaxLocks"],[3,"IsTransferable"],[3,"DepositPerItem"],[3,"DepositPerByte"],[3,"DeletionQueueDepth"],[3,"DeletionWeightLimit"],[3,"MySchedule"],[3,"OperationalFeeMultiplier"],[3,"StorageBytesMultiplier"],[3,"TicketsAssetId"],[3,"MaxAdditionalFields"],[3,"MaxRegistrars"],[3,"IndexDeposit"],[3,"AssetDeposit"],[3,"ApprovalDeposit"],[3,"StringLimit"],[3,"MetadataDepositBase"],[3,"MetadataDepositPerByte"],[3,"PalletInfo"],[3,"RuntimeApi"],[3,"IdentityFee"],[3,"BlockExecutionWeight"],[3,"ExtrinsicBaseWeight"],[3,"RocksDbWeight"],[8,"BuildStorage"],[8,"Contains"],[8,"Randomness"],[13,"force_unreserve"],[13,"transfer"],[13,"force_transfer"],[13,"transfer_keep_alive"],[13,"transfer_all"],[13,"set_balance"],[13,"System"],[13,"Timestamp"],[13,"Grandpa"],[13,"Balances"],[13,"Sudo"],[13,"Assets"],[13,"Indices"],[13,"Contracts"],[13,"Protos"],[13,"Fragments"],[13,"Detach"],[13,"Multisig"],[13,"Proxy"],[13,"Identity"],[13,"Utility"],[13,"Accounts"],[13,"System"],[13,"Grandpa"],[13,"Balances"],[13,"TransactionPayment"],[13,"Sudo"],[13,"Assets"],[13,"Indices"],[13,"Contracts"],[13,"Protos"],[13,"Fragments"],[13,"Detach"],[13,"Multisig"],[13,"Proxy"],[13,"Identity"],[13,"Utility"],[13,"Accounts"],[13,"Void"],[13,"system"],[13,"curate"],[13,"upload"],[13,"patch"],[13,"set_metadata"],[13,"transfer"],[13,"detach"],[13,"ban"],[13,"set"]]},\
"pallet_accounts":{"doc":"This pallet <code>frag</code> performs logic related to FRAG Token","t":[3,13,6,8,3,3,4,17,8,11,11,11,11,12,10,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,10,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,0,10,11,12,12,12,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,12,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,5,5,5,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,13,13,13,16,4,8,13,6,6,6,6,4,16,16,16,6,4,16,6,6,6,6,3,13,13,13,13,6,3,6,13,13,16,13,13,13,13,16,11,11,11,11,13,11,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,11,11,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["AccountInfo","Discord","DiscordID","EthFragContract","EthLock","EthLockUpdate","ExternalID","KEY_TYPE","WeightInfo","__clone_box","__clone_box","__clone_box","__clone_box","account_id","add_upload_auth","amount","amount","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","block_number","block_number","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","created_at","crypto","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","del_upload_auth","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","detach","drop","drop","drop","drop","dummy_data","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_partner_contracts","identity","identity","identity","identity","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","lock","locktime","pallet","patch","public","public","sender","signature","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","transfer","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","upload","vzip","vzip","vzip","vzip","0","FragAuthId","Pair","Public","Signature","__clone_box","__clone_box","__clone_box","all","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_byte_slice","as_byte_slice","as_mut","as_mut","as_mut","as_mut","as_mut_byte_slice","as_mut_slice_of","as_ref","as_ref","as_ref","as_ref","as_ref","as_slice_of","as_slice_of","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","derive","derive","deserialize","drop","drop","drop","drop","encode","encode","encode_hex","encode_hex","encode_hex_upper","encode_hex_upper","encode_to","encode_to","eq","eq","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_phrase","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_seed","from_seed_slice","from_string","from_string_with_version","generate_pair","generate_with_phrase","get_hash","get_hash","hash","hash","identity","identity","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","max_encoded_len","partial_cmp","public","serialize","sign","sign","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_public_crypto_pair","to_raw_vec","to_raw_vec","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_info","type_info","unchecked_from","unchecked_from","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","using_encoded","verify","verify","verify_weak","vzip","vzip","vzip","vzip","DummyData","Link","Lock","Unlock","__clone_box","__clone_box","account_id","account_id_second","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clamor_account_id","clone","clone","clone_into","clone_into","create_link_signature","create_lock_signature","create_unlock_signature","data","data","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","ethereum_account_pair","ethereum_account_pair","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_ethereum_account_id_from_ecdsa_public_struct","get_recovered_ethereum_account_id","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","link","link","link_second","link_signature","link_signature","lock","lock","lock_signature","new","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unlock","vzip","vzip","vzip","vzip","AccountAlreadyExists","AccountAlreadyLinked","AccountNotLinked","AuthorityId","Call","Config","DifferentAccountLinked","EVMLinkVoting","EVMLinkVotingClosed","EVMLinks","EVMLinksReverse","Error","EthChainId","EthConfirmations","EthFragContract","EthLockedFrag","Event","Event","ExternalAuthorities","ExternalID2Account","FragKeys","FragUsage","GenesisConfig","LinkAlreadyProcessed","LinkNotFound","Linked","Locked","Module","Pallet","PendingUnlinks","SponsoredAccount","SystematicFailure","Threshold","TooManyProxies","Unlinked","Unlocked","VerificationFailed","WeightInfo","__clone_box","__clone_box","__clone_box","add_key","add_key","add_sponsor","add_sponsor","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build_module_genesis_storage","clone","clone","clone","clone_into","clone_into","clone_into","count","crate_version","current_storage_version","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","del_key","del_key","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","dispatch_bypass_filter","drop","drop","drop","drop","drop","encode_to","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_name","get_call_names","get_dispatch_info","identity","identity","identity","index","infos","init","init","init","init","init","integrity_test","internal_lock_update","internal_lock_update","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","keys","link","link","migrate","module_name","name","new_call_variant_add_key","new_call_variant_add_sponsor","new_call_variant_del_key","new_call_variant_internal_lock_update","new_call_variant_link","new_call_variant_remove_sponsor","new_call_variant_sponsor_account","new_call_variant_unlink","offchain_worker","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_runtime_upgrade","remove_sponsor","remove_sponsor","serialize","sponsor_account","sponsor_account","storage_info","sync_partner_contracts","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","tt_default_parts","tt_error_token","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unlink","unlink","validate_unsigned","vzip","vzip","vzip","vzip","vzip","with_weight","account","account","account","data","external_id","public","public","signature","signature","balance","balance","eth_key","eth_key","eth_key","eth_key","external_id","locktime","sender","sender","sponsor","sponsored"],"q":["pallet_accountspallet_accounts::ExternalID","pallet_accounts::cryptopallet_accounts::dummy_data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pallet_accounts::palletpallet_accounts::pallet::Call","","","","","","","","","pallet_accounts::pallet::Event","","","","","","","","","","",""],"d":["<strong>Struct</strong> representing the details about accounts created …","TODO: Documentation","TODO: Documentation","<strong>Traits</strong> of the <strong>FRAG Token Smart Contract</strong> on the <strong>Ethereum </strong>…","<strong>Struct</strong> representing the details about the <strong>total amount of </strong>…","<strong>Struct</strong> representing a <strong>recent confirmed (i.e with </strong>…","TODO: Documentation","Defines application identifier for crypto keys of this …","Weight functions needed for pallet_protos.","","","","","The actual account ID","","If the event was <code>Lock</code>, it represents the <strong>total amount of </strong>…","Total amount of FRAG token locked (not just the newly …","","","","","","","","","","","","","","","","","","","","","Block number in which the event was emitted","Clamor Block Number in which the locked FRAG tokens was “…","","","","","","","","","","","","","","","","","The timestamp when this account was created","Based on the above <code>KeyTypeId</code> we need to generate a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","<strong>Return</strong> the <strong>contract address</strong> of the <strong>FRAG Token Smart </strong>…","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Whether the event was <code>Lock</code> or <code>Unlock</code>","If the event was <code>Lock</code>, it represents the lock period of …","The module that hosts all the FRAME types needed to add …","","","Public Account Address of What? (问Gio)","<strong>Ethereum Account Address</strong> that emitted the <code>Lock</code> or <code>Unlock</code> …","The lock/unlock signature signed by the Ethereum Account ID","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The identifier type for an offchain worker.","A generic <code>AppPublic</code> wrapper type over $pair crypto; this …","A generic <code>AppPublic</code> wrapper type over $public crypto; this …","A generic <code>AppPublic</code> wrapper type over $public crypto; this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Account already exists","Account already linked","Account not linked","The identifier type for an offchain worker.","Add a Clamor Account ID to <code>FragKeys</code>.","Configure the pallet by specifying the parameters and …","Account linked to different account","<strong>StorageMap</strong> that maps <strong>a FRAG token locking or unlocking </strong>…","<strong>StorageMap</strong> that maps <strong>a FRAG token locking or unlocking </strong>…","<strong>StorageMap</strong> that maps a <strong>Clamor Account ID</strong> to an <strong>Ethereum </strong>…","This <strong>StorageMap</strong> is the reverse mapping of <code>EVMLinks</code>.","Custom dispatch errors of this pallet.","The Ethereum Chain ID that the Fragnova-owned Ethereum …","The <strong>number of confirmations required</strong> to consider a …","<strong>Traits</strong> of the <strong>FRAG Token Smart Contract</strong> on the <strong>Ethereum </strong>…","<strong>StorageMap</strong> that maps an <strong>Ethereum Account ID</strong> to a to an …","The event emitted by this pallet.","Because this pallet emits events, it depends on the runtime…","The authorities able to sponsor accounts and link them to …","The map between external accounts and the local accounts …","<strong>StorageValue</strong> that equals the <strong>List of Clamor Account IDs</strong> …","<strong>StorageMap</strong> that maps a <strong>Clamor Account ID</strong> to the <strong>Amount of </strong>…","The Genesis Configuration for the Pallet.","Link already processed","Reference not found","A link happened between native and ethereum account.","ETH side lock was updated","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","The pallet implementing the on-chain logic.","<strong>List of Clamor Accounts</strong> whose <strong>(FRAG staking)-related </strong>…","A new sponsored account was added","Systematic failure - those errors should not happen.","Number of votes needed to do something (问Gio)","Too many proxies","A link was removed between native and ethereum account.","ETH side lock was unlocked","Signature verification failed","Weight functions needed for pallet_protos.","","","","Add <code>public</code> to the <strong>list of Clamor Account IDs</strong> that can …","Add <code>public</code> to the <strong>list of Clamor Account IDs</strong> that can …","Add a sponsor account to the list of sponsors able to …","Add a sponsor account to the list of sponsors able to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Remove a Clamor Account ID from <code>FragKeys</code> NOTE: Only the …","Remove a Clamor Account ID from <code>FragKeys</code> NOTE: Only the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","Update ‘data’","Update ‘data’","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","<strong>List of Clamor Account IDs</strong> that can <em><strong>validate</strong></em> and <em><strong>send</strong></em> …","<strong>Link</strong> the <strong>Clamor public account address that calls this </strong>…","<strong>Link</strong> the <strong>Clamor public account address that calls this </strong>…","","","","Create a call with the variant <code>add_key</code>.","Create a call with the variant <code>add_sponsor</code>.","Create a call with the variant <code>del_key</code>.","Create a call with the variant <code>internal_lock_update</code>.","Create a call with the variant <code>link</code>.","Create a call with the variant <code>remove_sponsor</code>.","Create a call with the variant <code>sponsor_account</code>.","Create a call with the variant <code>unlink</code>.","This function is being called after every block import …","","","","","","","","Remove a sponsor account to the list of sponsors able to …","Remove a sponsor account to the list of sponsors able to …","","TODO","TODO","","Obtain all the recent (i.e since last checked by Clamor) …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unlink the <strong>Clamor public account address that calls this </strong>…","Unlink the <strong>Clamor public account address that calls this </strong>…","For the call <code>Call:internal_lock_update</code> which is an …","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,7,0,0,0,0,0,0,0,7,9,10,11,11,72,9,10,7,9,10,11,7,9,10,11,7,9,10,11,7,9,10,11,7,9,10,11,9,10,7,9,10,11,7,9,10,11,7,9,10,11,7,9,10,11,11,0,7,9,10,11,7,9,10,11,7,9,10,11,7,9,10,11,72,7,9,10,11,7,9,10,11,72,7,9,10,11,0,7,9,10,11,7,9,10,11,7,9,10,11,7,9,10,11,7,9,10,11,7,7,9,9,10,10,11,11,7,7,9,9,10,10,11,11,73,7,9,10,11,7,9,10,11,7,9,10,11,7,9,10,11,7,9,10,11,7,9,10,11,7,9,10,11,7,9,10,11,9,9,0,72,9,9,9,9,7,9,10,11,7,9,10,11,72,7,9,10,11,7,9,10,11,7,9,10,11,7,9,10,11,7,9,10,11,7,9,10,11,7,9,10,11,7,9,10,11,7,9,10,11,72,7,9,10,11,74,0,0,0,0,27,29,31,27,75,27,29,31,75,27,29,31,27,29,27,27,29,31,27,27,27,27,29,29,31,27,29,27,29,27,29,27,29,75,27,29,31,75,27,29,31,27,29,31,27,29,31,27,27,29,27,29,27,29,27,29,75,27,29,29,31,75,27,29,31,27,31,27,75,27,29,31,27,29,27,29,27,29,27,29,27,29,27,29,27,27,29,75,27,27,29,29,31,31,75,75,27,27,29,29,31,31,31,75,75,27,27,29,29,31,31,31,31,27,27,27,31,27,29,27,29,27,29,75,27,29,31,75,27,29,31,75,27,29,31,75,27,29,31,75,27,29,31,75,27,29,31,75,27,29,31,27,27,31,27,27,31,27,29,27,29,31,27,27,31,27,75,27,27,29,29,29,31,75,27,29,31,27,29,27,29,27,29,75,27,29,31,27,29,27,29,75,27,29,31,75,27,29,31,27,29,27,31,31,75,27,29,31,0,0,0,0,44,45,51,51,76,51,44,45,76,51,44,45,76,51,44,45,76,51,44,45,44,44,45,44,45,0,0,0,76,45,76,51,44,45,76,51,44,45,76,51,44,45,51,45,76,51,44,45,76,76,51,51,44,44,45,45,76,76,51,51,44,44,45,45,0,44,76,51,44,45,76,51,44,45,76,51,44,45,76,51,44,45,76,51,44,45,76,51,44,45,76,51,44,45,51,45,51,51,44,76,51,51,51,44,45,76,51,44,45,76,51,44,45,76,51,44,45,76,51,44,45,76,51,44,45,51,76,51,44,45,62,62,62,52,0,0,62,0,0,0,0,0,52,52,52,0,0,52,0,0,0,0,0,62,62,58,58,0,0,0,58,62,52,62,58,58,62,52,57,58,59,57,59,57,59,55,57,58,62,59,55,57,58,62,59,58,62,59,58,62,59,58,62,59,55,57,58,62,59,55,57,58,62,59,55,55,57,58,59,57,58,59,57,57,57,58,62,59,58,62,59,58,62,59,58,62,59,55,57,59,55,57,58,62,59,55,57,58,62,59,55,59,55,57,58,62,59,58,62,59,57,58,59,57,58,59,57,58,62,59,55,57,58,62,59,55,55,57,57,58,58,62,62,59,59,55,55,57,57,58,58,62,62,59,59,59,59,59,58,62,59,57,57,55,57,58,62,59,57,57,59,55,57,58,62,59,55,57,58,62,59,55,57,58,62,59,55,57,58,62,59,55,57,58,62,59,55,57,58,62,59,55,57,59,57,57,57,59,59,59,59,59,59,59,59,57,57,57,57,57,57,57,57,57,59,55,57,59,57,57,58,62,59,57,58,59,55,57,58,62,59,55,57,58,62,59,0,0,58,62,59,58,62,59,58,62,59,55,57,58,62,59,58,62,59,55,57,58,62,59,55,57,58,62,59,57,59,57,55,57,58,62,59,62,77,78,79,80,81,82,83,84,80,85,86,87,88,85,86,89,85,87,88,89,89],"f":[0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],0,[[],2],0,0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7,7],[[[9,[8]]],[[9,[8]]]],[[[10,[8,8]]],[[10,[8,8]]]],[[[11,[8,8]]],[[11,[8,8]]]],[[]],[[]],[[]],[[]],0,0,[[],[[13,[7,12]]]],[[],[[13,[9,12]]]],[[],[[13,[10,12]]]],[[],[[13,[11,12]]]],[[],[[13,[12]]]],[[],[[13,[12]]]],[[],[[13,[12]]]],[[],[[13,[12]]]],[14,[[13,[12]]]],[14,[[13,[12]]]],[14,[[13,[12]]]],[14,[[13,[12]]]],[14,[[13,[12]]]],[14,[[13,[12]]]],[14,[[13,[12]]]],[14,[[13,[12]]]],[[],2],[15],[15],[15],[15],[15],[15],[15],[15],[[],2],[15],[15],[15],[15],0,[7],[9],[10],[11],[[7,7],16],[[[9,[17]],9],16],[[[10,[17,17]],10],16],[[[11,[17,17]],11],16],[[],16],[[],16],[[],16],[[],16],[[7,18],19],[[[9,[20]],18],19],[[[10,[20,20]],18],19],[[[11,[20,20]],18],19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[6,[21]]]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],15],[[],15],[[],15],[[],15],[[]],[[]],[[]],[[]],[[[22,[5]]],[[22,[3,5]]]],[[[22,[5]]],[[22,[3,5]]]],[[[22,[5]]],[[22,[3,5]]]],[[[22,[5]]],[[22,[3,5]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[24,[[24,[3]]]],[24,[[24,[3]]]],[24,[[24,[3]]]],[24,[[24,[3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],2],[9],0,0,0,[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[]],[[]],[[]],[[]],[[],2],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],25],[[],25],[[],25],[[],25],[[],26],[[],26],[[],26],[[],26],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[]],[[]],[[]],[[]],0,0,0,0,0,[1],[1],[1],[[],[[6,[27]]]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[27,28],[27],[29,30],[31,32],[[]],[[],[[13,[33]]]],[27,28],[27],[29],[29,30],[31,32],[[],[[13,[33]]]],[[],[[13,[33]]]],[[]],[[]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[27,27],[29,29],[31,31],[[]],[[]],[[]],[[27,27],34],[[],[[13,[27,12]]]],[[],[[13,[29,12]]]],[[],[[13,[12]]]],[[],[[13,[12]]]],[14,[[13,[12]]]],[14,[[13,[12]]]],[14,[[13,[12]]]],[14,[[13,[12]]]],[15],[15],[15],[29],[15],[15],[15],[15],[15],[[27,35],[[36,[27]]]],[[31,35,36],13],[[],[[13,[27]]]],[15],[15],[15],[15],[27,[[6,[4]]]],[29,[[6,[4]]]],[[]],[[]],[[]],[[]],[27],[29],[[27,27],16],[[29,29],16],[[],16],[[],16],[[27,18],19],[[27,18],19],[[29,18],19],[[]],[28,27],[[]],[[]],[30,29],[32,31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[37,[36,[37]]],[[13,[38]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],31],[[],[[13,[31,38]]]],[37,[[13,[39]]]],[37,[[13,[39]]]],[[[36,[[6,[4]]]]],27],[[[36,[37]]]],[[],40],[[],40],[27],[29],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],15],[[],15],[[],15],[[],15],[[]],[[]],[[]],[[]],[[[22,[5]]],[[22,[3,5]]]],[[[22,[5]]],[[22,[3,5]]]],[[[22,[5]]],[[22,[3,5]]]],[[[22,[5]]],[[22,[3,5]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[24,[[24,[3]]]],[24,[[24,[3]]]],[24,[[24,[3]]]],[24,[[24,[3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],15],[[27,27],[[36,[34]]]],[31],[27,13],[27,36],[31],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[]],[[]],[[]],[27,41],[27,[[6,[4]]]],[31,[[6,[4]]]],[[],21],[[],13],[[],[[13,[27]]]],[[],13],[[],[[13,[29]]]],[[[6,[4]]],[[13,[29]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],25],[[],25],[[],25],[[],25],[[],26],[[],26],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[27,42]],[[29,42]],[27,16],[43,16],[[43,43],16],[[]],[[]],[[]],[[]],0,0,0,0,[1],[1],0,0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[44,44],[45,45],[[]],[[]],[[28,46],47],[[46,48,48],47],[[46,48],47],0,0,[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[49,50],[44,50],[[],15],[[],15],[[],15],[[],15],[[]],[[]],[[]],[[]],[[[22,[5]]],[[22,[3,5]]]],[[[22,[5]]],[[22,[3,5]]]],[[[22,[5]]],[[22,[3,5]]]],[[[22,[5]]],[[22,[3,5]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[24,[[24,[3]]]],[24,[[24,[3]]]],[24,[[24,[3]]]],[24,[[24,[3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[],51],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[[[53,[52]],28],54],0,[[[53,[52]]],54],0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[55],[[55,56],[[13,[21]]]],[57,57],[[[58,[52]]],[[58,[52]]]],[[[59,[52]]],[[59,[52]]]],[[]],[[]],[[]],[[],15],[[],60],[[],61],[[],[[13,[[58,[52]],12]]]],[[],[[13,[62,12]]]],[[],[[13,[[59,[52]],12]]]],[[],[[13,[12]]]],[[],[[13,[12]]]],[[],[[13,[12]]]],[14,[[13,[12]]]],[14,[[13,[12]]]],[14,[[13,[12]]]],[14,[[13,[12]]]],[14,[[13,[12]]]],[14,[[13,[12]]]],[[],55],[[[53,[52]],28],54],0,[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[[],[[13,[55]]]],[[[59,[52]]],63],[15],[15],[15],[15],[15],[[[58,[52]]]],[62],[[[59,[52]]]],[[57,57],16],[[[58,[52]],[58,[52]]],16],[[[59,[52]],[59,[52]]],16],[[],16],[[],16],[[],16],[[57,18],19],[[[58,[52]],18],19],[[[62,[52]],18],19],[[[59,[52]],18],19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[59,[52]]],37],[[]],[[[59,[52]]],64],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],15],[[],[[6,[65]]]],[[],15],[[],15],[[],15],[[],15],[[],15],[[]],[[[53,[52]],9],54],0,[[]],[[]],[[]],[[]],[[]],[[[22,[5]]],[[22,[3,5]]]],[[[22,[5]]],[[22,[3,5]]]],[[[22,[5]]],[[22,[3,5]]]],[[[22,[5]]],[[22,[3,5]]]],[[[22,[5]]],[[22,[3,5]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[24,[[24,[3]]]],[24,[[24,[3]]]],[24,[[24,[3]]]],[24,[[24,[3]]]],[24,[[24,[3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[53,[52]],47],54],0,[66,2],[[],37],[[],37],[28,[[59,[52]]]],[[],[[59,[52]]]],[28,[[59,[52]]]],[9,[[59,[52]]]],[47,[[59,[52]]]],[[],[[59,[52]]]],[7,[[59,[52]]]],[50,[[59,[52]]]],[[]],[[]],[[],61],[[]],[[]],[2,2],[[],2],[[],2],[[[53,[52]]],54],0,[55,13],[[[53,[52]],7],54],0,[[],[[6,[67]]]],[[]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],25],[[],25],[[],25],[[],25],[[],25],[[],26],[[],26],[[],26],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[53,[52]],50],54],0,[68,69],[[]],[[]],[[]],[[]],[[]],[2,[[71,[70]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"p":[[3,"Private"],[3,"Weight"],[8,"Any"],[15,"u8"],[3,"Global"],[3,"Vec"],[4,"ExternalID"],[8,"Clone"],[3,"EthLockUpdate"],[3,"EthLock"],[3,"AccountInfo"],[3,"Error"],[4,"Result"],[15,"u32"],[15,"usize"],[15,"bool"],[8,"PartialEq"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[3,"String"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"TypeId"],[3,"Type"],[3,"Public"],[3,"Public"],[3,"Signature"],[3,"Signature"],[3,"Pair"],[3,"Pair"],[4,"Error"],[4,"Ordering"],[8,"Iterator"],[4,"Option"],[15,"str"],[4,"SecretStringError"],[4,"PublicError"],[15,"u64"],[3,"CryptoTypePublicPair"],[8,"FnOnce"],[8,"AsRef"],[3,"Link"],[3,"Lock"],[3,"Pair"],[3,"Signature"],[3,"U256"],[3,"Public"],[3,"H160"],[3,"DummyData"],[8,"Config"],[6,"OriginFor"],[6,"DispatchResult"],[3,"GenesisConfig"],[3,"Storage"],[3,"Pallet"],[4,"Event"],[4,"Call"],[3,"CrateVersion"],[3,"StorageVersion"],[4,"Error"],[6,"DispatchResultWithPostInfo"],[3,"DispatchInfo"],[3,"PalletInfoData"],[3,"RuntimeDbWeight"],[3,"StorageInfo"],[4,"TransactionSource"],[6,"TransactionValidity"],[3,"PostDispatchInfo"],[3,"DispatchErrorWithPostInfo"],[8,"WeightInfo"],[8,"EthFragContract"],[13,"Discord"],[3,"FragAuthId"],[3,"Unlock"],[13,"unlink"],[13,"add_sponsor"],[13,"remove_sponsor"],[13,"internal_lock_update"],[13,"sponsor_account"],[13,"add_key"],[13,"del_key"],[13,"link"],[13,"Locked"],[13,"Unlocked"],[13,"Linked"],[13,"Unlinked"],[13,"SponsoredAccount"]]},\
"pallet_detach":{"doc":"This pallet <code>detach</code> performs logic related to Detaching a …","tn":["DetachInternalData","DetachRequest","EthereumGoerli","EthereumMainnet","EthereumRinkeby","ExportData","KEY_TYPE","SupportedChains","WeightInfo","__clone_box","__clone_box","__clone_box","__clone_box","add_eth_auth","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","crypto","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","del_eth_auth","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","hash","hash","identity","identity","identity","identity","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","nonce","pallet","public","public","remote_signature","target_account","target_account","target_chain","target_chain","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","DetachAuthId","Pair","Public","Signature","__clone_box","__clone_box","__clone_box","all","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_byte_slice","as_byte_slice","as_mut","as_mut","as_mut","as_mut","as_mut_byte_slice","as_mut_slice_of","as_ref","as_ref","as_ref","as_ref","as_ref","as_slice_of","as_slice_of","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","derive","derive","deserialize","drop","drop","drop","drop","encode","encode","encode_hex","encode_hex","encode_hex_upper","encode_hex_upper","encode_to","encode_to","eq","eq","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_phrase","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_seed","from_seed_slice","from_string","from_string_with_version","generate_pair","generate_with_phrase","get_hash","get_hash","hash","hash","identity","identity","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","max_encoded_len","partial_cmp","public","serialize","sign","sign","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_public_crypto_pair","to_raw_vec","to_raw_vec","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_info","type_info","unchecked_from","unchecked_from","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","using_encoded","verify","verify","verify_weak","vzip","vzip","vzip","vzip","AuthorityId","Call","Config","DetachNonces","DetachRequests","Detached","Detached","DetachedHashes","Error","EthereumAuthorities","Event","Event","FragKeys","GenesisConfig","MetadataChanged","Module","NoValidator","Pallet","Patched","SigningFailed","Transferred","Uploaded","WeightInfo","__clone_box","__clone_box","__clone_box","add_eth_auth","add_eth_auth","add_key","add_key","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build_module_genesis_storage","clone","clone","clone","clone_into","clone_into","clone_into","count","crate_version","current_storage_version","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","del_eth_auth","del_eth_auth","del_key","del_key","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","dispatch_bypass_filter","drop","drop","drop","drop","drop","encode_to","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","eth_authorities","fmt","fmt","fmt","fmt","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_name","get_call_names","get_dispatch_info","identity","identity","identity","index","infos","init","init","init","init","init","integrity_test","internal_finalize_detach","internal_finalize_detach","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","keys","migrate","module_name","name","new_call_variant_add_eth_auth","new_call_variant_add_key","new_call_variant_del_eth_auth","new_call_variant_del_key","new_call_variant_internal_finalize_detach","offchain_worker","offchain_worker","on_chain_storage_version","on_finalize","on_finalize","on_genesis","on_idle","on_initialize","on_runtime_upgrade","serialize","storage_info","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","tt_default_parts","tt_error_token","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","validate_unsigned","vzip","vzip","vzip","vzip","vzip","with_weight","data","public","public","public","public","signature","account_id","fragment_data_hash","fragment_data_hash","fragment_data_hash","fragment_data_hash","fragment_data_hash","remote_signature","remote_signature"],"q":["pallet_detachpallet_detach::cryptopallet_detach::palletpallet_detach::pallet::Call","","","","","","pallet_detach::pallet::Event","","","","","","",""],"d":["<strong>Struct</strong> that <strong>represents</strong> a <strong><em>signed</em> request</strong> (signed by the …","<strong>Struct</strong> that <strong>represents</strong> a <strong>request to detach a Proto-Fragment</strong>","Ethereum Goerli Chain","Ethereum Mainnet Chain","Ethereum Rinkeby Chain","<strong>Struct</strong> that <strong>contains information</strong> about a <strong>detached </strong>…","Defines application identifier for crypto keys of this …","**Possible Blockchains into which a <strong>Proto-Fragment</strong> can be …","Weight functions needed for pallet_detach.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Add a crypto module with an ed25519 signature key to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","<strong>Hash</strong> of the <strong>data</strong> of the <strong>Proto-Fragment</strong>","Proto-Fragment’s Data’s Hash","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","The number of signed detaches done by the <code>target_account</code> …","The module that hosts all the FRAME types needed to add …","","Clamor Public Account Address (the account address should …","Signature that is signed by an EthereumAuthority on the …","<strong>Account Address</strong> on the <code>target_chain</code> to send the …","PublicAccount Address of the External Blockchain to …","<strong>External Blockchain</strong> to <strong>send</strong> the <strong>Proto-Fragment</strong> to","External Blockchain to transfer the Proto-Fragment to","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The identifier type for an offchain worker.","A generic <code>AppPublic</code> wrapper type over $pair crypto; this …","A generic <code>AppPublic</code> wrapper type over $public crypto; this …","A generic <code>AppPublic</code> wrapper type over $public crypto; this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The identifier type for an offchain worker.","Functions that are callable from outside the runtime.","Configure the pallet by specifying the parameters and …","<strong>StorageDoubleMap</strong> that maps an <strong>account address on an </strong>…","<strong>StorageValue</strong> that equals a <strong>list of detach requests</strong>","","Already detached","<strong>StorageMap</strong> that maps a <strong>detached Proto-Fragment’s hash</strong> to …","Custom dispatch errors of this pallet.","<strong>StorageValue</strong> that equals the <strong>set of ECDSA public keys of </strong>…","The event emitted by this pallet.","Because this pallet emits events, it depends on the runtime…","<strong>StorageValue</strong> that equals the <strong>List of Clamor Account IDs</strong> …","The Genesis Configuration for the Pallet.","","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","No Validators are present","The pallet implementing the on-chain logic.","","Failed to sign message","","","Weight functions needed for pallet_detach.","","","","<strong>Add</strong> an <strong>ECDSA public key</strong> to the <strong>set of Ethereum accounts </strong>…","<strong>Add</strong> an <strong>ECDSA public key</strong> to the <strong>set of Ethereum accounts </strong>…","Add an <strong>Ed25519 public key</strong> to the <strong>set of Clamor accounts </strong>…","Add an <strong>Ed25519 public key</strong> to the <strong>set of Clamor accounts </strong>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<strong>Remove</strong> an <strong>ECDSA public key</strong> from the <strong>set of Ethereum </strong>…","<strong>Remove</strong> an <strong>ECDSA public key</strong> from the <strong>set of Ethereum </strong>…","Remove an <strong>Ed25519 public key</strong> from the <strong>set of Clamor </strong>…","Remove an <strong>Ed25519 public key</strong> from the <strong>set of Clamor </strong>…","","","","","","","","","","","","","","","","","","","","","","","","","","","<strong>List of ECDSA public keys of the Ethereum accounts</strong> that …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","Detached a Proto-Fragment from this blockchain (Clamor) by …","Detached a Proto-Fragment from this blockchain (Clamor) by …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","<strong>List of Clamor Account IDs</strong> that can both <em><strong>validate</strong></em> and <em><strong>send</strong></em> …","","","","Create a call with the variant <code>add_eth_auth</code>.","Create a call with the variant <code>add_key</code>.","Create a call with the variant <code>del_eth_auth</code>.","Create a call with the variant <code>del_key</code>.","Create a call with the variant <code>internal_finalize_detach</code>.","This function is being called after every block import …","","","","During the block finalization phase, the <strong>list</strong> in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","For the call <code>Call:internal_finalize_detach</code> which is an …","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,7,7,7,0,0,0,0,7,8,10,11,65,7,8,10,11,7,8,10,11,7,8,10,11,7,8,10,11,7,8,10,11,7,8,10,11,7,8,10,11,7,8,10,11,7,8,10,11,0,7,8,10,11,7,8,10,11,7,8,10,11,7,8,10,11,65,7,8,10,11,7,8,10,11,7,8,10,11,7,8,10,11,7,8,10,11,7,8,7,8,10,11,7,8,10,11,7,7,8,8,10,10,11,11,7,7,8,8,10,10,11,11,8,10,7,8,10,11,7,8,10,11,7,8,10,11,7,8,10,11,7,8,10,11,7,8,10,11,7,8,10,11,7,8,10,11,10,0,10,10,10,8,10,8,10,7,8,10,11,7,8,10,11,7,8,10,11,7,8,10,11,7,8,10,11,7,8,10,11,7,8,10,11,7,8,10,11,7,8,10,11,7,8,10,11,7,8,10,11,7,8,10,11,0,0,0,0,26,28,30,26,66,26,28,30,66,26,28,30,26,28,26,26,28,30,26,26,26,26,28,28,30,26,28,26,28,26,28,26,28,66,26,28,30,66,26,28,30,26,28,30,26,28,30,26,26,28,26,28,26,28,26,28,66,26,28,28,30,66,26,28,30,26,30,26,66,26,28,30,26,28,26,28,26,28,26,28,26,28,26,28,26,26,28,66,26,26,28,28,30,30,66,66,26,26,28,28,30,30,30,66,66,26,26,28,28,30,30,30,30,26,26,26,30,26,28,26,28,26,28,66,26,28,30,66,26,28,30,66,26,28,30,66,26,28,30,66,26,28,30,66,26,28,30,66,26,28,30,26,26,30,26,26,30,26,28,26,28,30,26,26,30,26,66,26,26,28,28,28,30,66,26,28,30,26,28,26,28,26,28,66,26,28,30,26,28,26,28,66,26,28,30,66,26,28,30,26,28,26,30,30,66,26,28,30,44,0,0,0,0,51,55,0,0,0,0,44,0,0,51,0,55,0,51,55,51,51,44,50,51,52,50,52,50,52,48,50,51,55,52,48,50,51,55,52,51,55,52,51,55,52,51,55,52,48,50,51,55,52,48,50,51,55,52,48,48,50,51,52,50,51,52,50,50,50,51,55,52,51,55,52,51,55,52,51,55,52,48,50,52,50,52,48,50,51,55,52,48,50,51,55,52,48,52,48,50,51,55,52,51,55,52,50,51,52,50,51,52,48,50,51,55,52,48,50,51,55,52,48,48,50,50,51,51,55,55,52,52,48,48,50,50,51,51,55,55,52,52,52,52,52,51,55,52,50,50,48,50,51,55,52,50,50,52,48,50,51,55,52,48,50,51,55,52,48,50,51,55,52,48,50,51,55,52,48,50,51,55,52,48,50,51,55,52,48,50,50,50,52,52,52,52,52,50,50,50,50,50,50,50,50,50,48,50,51,55,52,50,51,52,48,50,51,55,52,48,50,51,55,52,0,0,51,55,52,51,55,52,51,55,52,48,50,51,55,52,51,55,52,48,50,51,55,52,48,50,51,55,52,50,48,50,51,55,52,55,67,68,69,70,71,67,72,73,74,75,76,72,75,76],"f":[0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[[],2],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7,7],[8,8],[[[10,[9]]],[[10,[9]]]],[11,11],[[]],[[]],[[]],[[]],0,[[],[[13,[7,12]]]],[[],[[13,[8,12]]]],[[],[[13,[10,12]]]],[[],[[13,[11,12]]]],[[],[[13,[12]]]],[[],[[13,[12]]]],[[],[[13,[12]]]],[[],[[13,[12]]]],[14,[[13,[12]]]],[14,[[13,[12]]]],[14,[[13,[12]]]],[14,[[13,[12]]]],[14,[[13,[12]]]],[14,[[13,[12]]]],[14,[[13,[12]]]],[14,[[13,[12]]]],[[],2],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[7],[8],[10],[11],[[7,7],16],[[8,8],16],[[[10,[17]],10],16],[[11,11],16],[[],16],[[],16],[[7,18],19],[[8,18],19],[[[10,[20]],18],19],[[11,18],19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],15],[[],15],[[],15],[[],15],[[]],[[]],[[]],[[]],[[[21,[5]]],[[21,[3,5]]]],[[[21,[5]]],[[21,[3,5]]]],[[[21,[5]]],[[21,[3,5]]]],[[[21,[5]]],[[21,[3,5]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[10],0,0,0,0,0,0,[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],24],[[],24],[[],24],[[],24],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[1],[1],[1],[[],[[6,[26]]]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[26,27],[26],[28,29],[30,31],[[]],[[],[[13,[32]]]],[26,27],[26],[28],[28,29],[30,31],[[],[[13,[32]]]],[[],[[13,[32]]]],[[]],[[]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[26,26],[28,28],[30,30],[[]],[[]],[[]],[[26,26],33],[[],[[13,[26,12]]]],[[],[[13,[28,12]]]],[[],[[13,[12]]]],[[],[[13,[12]]]],[14,[[13,[12]]]],[14,[[13,[12]]]],[14,[[13,[12]]]],[14,[[13,[12]]]],[15],[15],[15],[28],[15],[15],[15],[15],[15],[[26,34],[[35,[26]]]],[[30,34,35],13],[[],[[13,[26]]]],[15],[15],[15],[15],[26,[[6,[4]]]],[28,[[6,[4]]]],[[]],[[]],[[]],[[]],[26],[28],[[26,26],16],[[28,28],16],[[],16],[[],16],[[26,18],19],[[26,18],19],[[28,18],19],[[]],[[]],[27,26],[[]],[29,28],[[]],[31,30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[36,[35,[36]]],[[13,[37]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],30],[[],[[13,[30,37]]]],[36,[[13,[38]]]],[36,[[13,[38]]]],[[[35,[[6,[4]]]]],26],[[[35,[36]]]],[[],39],[[],39],[26],[28],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],15],[[],15],[[],15],[[],15],[[]],[[]],[[]],[[]],[[[21,[5]]],[[21,[3,5]]]],[[[21,[5]]],[[21,[3,5]]]],[[[21,[5]]],[[21,[3,5]]]],[[[21,[5]]],[[21,[3,5]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],15],[[26,26],[[35,[33]]]],[30],[26,13],[26,35],[30],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[]],[[]],[[]],[26,40],[26,[[6,[4]]]],[30,[[6,[4]]]],[[],41],[[],13],[[],[[13,[26]]]],[[],13],[[],[[13,[28]]]],[[],13],[[[6,[4]]],[[13,[28]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],24],[[],24],[[],24],[[],24],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[26,42]],[[28,42]],[26,16],[43,16],[[43,43],16],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[[[45,[44]],46],47],0,[[[45,[44]],27],47],0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[48],[[48,49],[[13,[41]]]],[50,50],[[[51,[44]]],[[51,[44]]]],[[[52,[44]]],[[52,[44]]]],[[]],[[]],[[]],[[],15],[[],53],[[],54],[[],[[13,[[51,[44]],12]]]],[[],[[13,[55,12]]]],[[],[[13,[[52,[44]],12]]]],[[],[[13,[12]]]],[[],[[13,[12]]]],[[],[[13,[12]]]],[14,[[13,[12]]]],[14,[[13,[12]]]],[14,[[13,[12]]]],[14,[[13,[12]]]],[14,[[13,[12]]]],[14,[[13,[12]]]],[[],48],[[[45,[44]],46],47],0,[[[45,[44]],27],47],0,[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[[],[[13,[48]]]],[[[52,[44]]],56],[15],[15],[15],[15],[15],[[[51,[44]]]],[55],[[[52,[44]]]],[[50,50],16],[[[51,[44]],[51,[44]]],16],[[[52,[44]],[52,[44]]],16],[[],16],[[],16],[[],16],0,[[50,18],19],[[[51,[44]],18],19],[[[55,[44]],18],19],[[[52,[44]],18],19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[52,[44]]],36],[[]],[[[52,[44]]],57],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],15],[[],[[6,[58]]]],[[],15],[[],15],[[],15],[[],15],[[],15],[[]],[[[45,[44]],10],47],0,[[]],[[]],[[]],[[]],[[]],[[[21,[5]]],[[21,[3,5]]]],[[[21,[5]]],[[21,[3,5]]]],[[[21,[5]]],[[21,[3,5]]]],[[[21,[5]]],[[21,[3,5]]]],[[[21,[5]]],[[21,[3,5]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[22,[[22,[3]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[23,[[23,[3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[59,2],[[],36],[[],36],[46,[[52,[44]]]],[27,[[52,[44]]]],[46,[[52,[44]]]],[27,[[52,[44]]]],[10,[[52,[44]]]],[[]],[[]],[[],54],[[]],[[]],[[]],[2,2],[[],2],[[],2],[48,13],[[],[[6,[60]]]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[61,62],[[]],[[]],[[]],[[]],[[]],[2,[[64,[63]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0],"p":[[3,"Private"],[3,"Weight"],[8,"Any"],[15,"u8"],[3,"Global"],[3,"Vec"],[4,"SupportedChains"],[3,"DetachRequest"],[8,"Clone"],[3,"DetachInternalData"],[3,"ExportData"],[3,"Error"],[4,"Result"],[15,"u32"],[15,"usize"],[15,"bool"],[8,"PartialEq"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"TypeId"],[3,"Type"],[3,"Public"],[3,"Public"],[3,"Signature"],[3,"Signature"],[3,"Pair"],[3,"Pair"],[4,"Error"],[4,"Ordering"],[8,"Iterator"],[4,"Option"],[15,"str"],[4,"SecretStringError"],[4,"PublicError"],[15,"u64"],[3,"CryptoTypePublicPair"],[3,"String"],[8,"FnOnce"],[8,"AsRef"],[8,"Config"],[6,"OriginFor"],[3,"Public"],[6,"DispatchResult"],[3,"GenesisConfig"],[3,"Storage"],[3,"Pallet"],[4,"Event"],[4,"Call"],[3,"CrateVersion"],[3,"StorageVersion"],[4,"Error"],[6,"DispatchResultWithPostInfo"],[3,"DispatchInfo"],[3,"PalletInfoData"],[3,"RuntimeDbWeight"],[3,"StorageInfo"],[4,"TransactionSource"],[6,"TransactionValidity"],[3,"PostDispatchInfo"],[3,"DispatchErrorWithPostInfo"],[8,"WeightInfo"],[3,"DetachAuthId"],[13,"internal_finalize_detach"],[13,"add_eth_auth"],[13,"del_eth_auth"],[13,"add_key"],[13,"del_key"],[13,"Transferred"],[13,"Uploaded"],[13,"Patched"],[13,"MetadataChanged"],[13,"Detached"]]},\
"pallet_fragments":{"doc":"This pallet <code>fragments</code> performs logic related to Fragment …","tn":["FragmentBuyOptions","FragmentDefinition","FragmentInstance","FragmentMetadata","PublishingData","Quantity","UniqueData","UniqueOptions","WeightInfo","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","amount","amount","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","create","created_at","created_at","creator","currency","custom_data","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","encode","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","eq","eq","expiration","expiring_at","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","identity","identity","identity","identity","identity","identity","init","init","init","init","init","init","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","max_supply","metadata","mutable","name","pallet","permissions","permissions","price","proto_hash","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","units_left","using_encoded","vzip","vzip","vzip","vzip","vzip","vzip","0","0","AlreadyExist","Call","Config","CopiesCount","CurrencyNotFound","DefinitionCreated","Definitions","Detached","EditionsCount","Error","Event","Event","Expirations","Expired","Expired","Fragments","InsufficientBalance","Inventory","InventoryAdded","InventoryRemoved","InventoryUpdated","MaxSupplyReached","MetadataNameIsEmpty","Module","NoPermission","NotFound","Owners","Pallet","ParamsNotValid","Proto2Fragments","ProtoNotFound","ProtoOwnerNotFound","PublishedQuantityReached","Publishing","Publishing","ReceiverBelowMinimumBalance","SaleAlreadyOpen","SoldOut","SystematicFailure","UniqueData2Edition","UniqueDataExists","Unpublishing","WeightInfo","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buy","buy","clone","clone","clone","clone_into","clone_into","clone_into","count","crate_version","create","create","create_account","create_account","current_storage_version","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","dispatch_bypass_filter","drop","drop","drop","drop","encode_to","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_name","get_call_names","get_dispatch_info","get_fragment_account_id","get_vault_id","give","give","identity","identity","identity","index","infos","init","init","init","init","integrity_test","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","migrate","mint","mint","mint_fragments","module_name","name","new_call_variant_buy","new_call_variant_create","new_call_variant_create_account","new_call_variant_give","new_call_variant_mint","new_call_variant_publish","new_call_variant_unpublish","offchain_worker","on_chain_storage_version","on_finalize","on_finalize","on_genesis","on_idle","on_initialize","on_runtime_upgrade","publish","publish","storage_info","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","tt_default_parts","tt_error_token","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unpublish","unpublish","vzip","vzip","vzip","vzip","with_weight","amount","amount","copy","copy","definition_hash","definition_hash","definition_hash","definition_hash","definition_hash","definition_hash","edition","edition","expiration","expires","max_supply","metadata","new_permissions","options","options","permissions","price","proto_hash","quantity","to","unique","account_id","account_id","account_id","account_id","definition_hash","definition_hash","definition_hash","definition_hash","definition_hash","definition_hash","definition_hash","fragment_id","fragment_id","fragment_id","fragment_id"],"q":["pallet_fragmentspallet_fragments::FragmentBuyOptions","","pallet_fragments::palletpallet_fragments::pallet::Call","","","","","","","","","","","","","","","","","","","","","","","","","pallet_fragments::pallet::Event","","","","","","","","","","","","","",""],"d":["<strong>Enum</strong> indicating whether to <strong>create one Fragment Instance </strong>…","<strong>Struct</strong> of a <strong>Fragment Definition</strong>","<strong>Struct</strong> of a <strong>Fragment Instance</strong>","<strong>Struct</strong> of a <strong>Fragment Definition’s Metadata</strong>","Struct <strong>representing</strong> a sale of the <strong>Fragment Definition</strong> .","Create create <em>“x”</em> Number of Fragment Instances to …","Create a single Fragment Instance with custom data <em>“x”</em> …","TODO <strong>Enum</strong> that represents the <strong>settings</strong> for a <strong>Fragment </strong>…","Weight functions needed for pallet_fragments.","","","","","","","If the Fragment instance represents a <strong>stack of stackable </strong>…","If the Fragment instance represents a <strong>stack of stackable </strong>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The block number when the item was created","Block number in which the Fragment Instance was created","The creator of this class","<strong>Currency</strong> that the <strong>buyer</strong> of a <strong>Fragment Instance that is </strong>…","Custom data, if unique, this is the hash of the data that …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Block number that the sale ends at (<em>optional</em>)","Block number that the Fragment Instance expires at (…","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If scarce, the max supply of the Fragment","<strong><em>FragmentMetadata</em> Struct</strong> (the <strong>struct</strong> contains the <strong>Fragment</strong>…","Whether the unique data of the Fragment instance(s) are …","<strong>Name</strong> of the <strong>Fragment Definition</strong>","The module that hosts all the FRAME types needed to add …","<strong>Set of Actions</strong> (encapsulated in a <code>FragmentPerms</code> bitflag …","Next owner permissions, owners can change those if they …","<strong>Fee</strong> that is <strong>needed to be paid</strong> to create a <strong>single Fragment </strong>…","<strong>Proto-Fragment used</strong> to <strong>create</strong> the <strong>Fragment</strong>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether the <strong>Fragment Definition</strong> is <strong>mutable</strong>","","","","","","","<strong>Amount of Fragment Instances</strong> that <strong>can be bought</strong>","","","","","","","","","","Already exist","Contains one variant per dispatchable that can be called …","Configure the pallet by specifying the parameters and …","<strong>StorageMap</strong> that maps a <strong>tuple that contains a Fragment </strong>…","Currency not found","New definition created by account, definition hash","<strong>StorageMap</strong> that maps a <strong>Fragment Definition ID (which is </strong>…","Already detached","<strong>StorageMap</strong> that maps a <strong>Fragment Definition ID</strong> to the <strong>total </strong>…","Custom dispatch errors of this pallet.","The event emitted by this pallet.","Because this pallet emits events, it depends on the runtime…","StorageMap that maps the <strong>Block Number that a Fragment </strong>…","Fragment Expiration event","Sale has expired","<strong>StorageNMap</strong> that maps the <strong>Fragment Definition ID of a </strong>…","Insufficient funds","StorageDoubleMap that maps the <strong>Owner of a Fragment </strong>…","Inventory item has been added to account","Inventory item has removed added from account","Inventory has been updated","Max supply reached","Metadata Name is Empty","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","No Permission","Not found","StorageDoubleMap that maps a <strong>Fragment Definition and the </strong>…","The pallet implementing the on-chain logic.","Params not valid","<strong>StorageMap</strong> that maps a <strong>Proto-Fragment</strong> to a <strong>list of </strong>…","Proto not found","Proto owner not found","Published quantity reached","<strong>StorageMap</strong> that maps a <strong>Fragment Definition ID (which is </strong>…","Fragment sale has been opened","Account cannot exist with the funds that would be given.","Sale already open","Fragment sale sold out","This should not really happen","StorageMap that maps a <strong>Fragment Definition and a <em><strong>Unique </strong></em></strong>…","Fragment Instance already uploaded with the same unique …","Fragment sale has been closed","Weight functions needed for pallet_fragments.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Allows the Caller Account ID <code>origin</code> to create Fragment …","Allows the Caller Account ID <code>origin</code> to create Fragment …","","","","","","","","","<strong>Create</strong> a <strong>Fragment Definition</strong> using an <strong>existing </strong>…","<strong>Create</strong> a <strong>Fragment Definition</strong> using an <strong>existing </strong>…","Create the <strong>Account ID</strong> of the <strong>Fragment Instance whose </strong>…","Create the <strong>Account ID</strong> of the <strong>Fragment Instance whose </strong>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","Get the <strong>Account ID</strong> of the <strong>Fragment Instance whose Fragment </strong>…","<strong>Get</strong> the <strong>Account ID</strong> of the Fragment Definition …","Give the <strong>Fragment Instance whose Fragment Definition ID is </strong>…","Give the <strong>Fragment Instance whose Fragment Definition ID is </strong>…","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Create <strong>Fragment instance(s)</strong> from the <strong>Fragment Definition </strong>…","Create <strong>Fragment instance(s)</strong> from the <strong>Fragment Definition </strong>…","Create <code>quantity</code> number of Fragment Instances from the …","","","Create a call with the variant <code>buy</code>.","Create a call with the variant <code>create</code>.","Create a call with the variant <code>create_account</code>.","Create a call with the variant <code>give</code>.","Create a call with the variant <code>mint</code>.","Create a call with the variant <code>publish</code>.","Create a call with the variant <code>unpublish</code>.","","","During the block finalization phase, clear all the …","","","","","","Put the <strong>Fragment Definition <code>definition_hash</code></strong> on sale. When …","Put the <strong>Fragment Definition <code>definition_hash</code></strong> on sale. When …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Take the <strong>Fragment Definition <code>definition_hash</code></strong> off sale. …","Take the <strong>Fragment Definition <code>definition_hash</code></strong> off sale. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,12,12,0,0,7,8,9,10,11,12,10,11,7,8,9,10,11,12,7,8,9,10,11,12,7,8,9,10,11,12,7,8,9,10,11,12,7,8,9,10,11,12,7,8,9,10,11,12,7,8,9,10,11,12,7,8,9,10,11,12,7,8,9,10,11,12,53,9,10,9,7,10,7,8,9,10,11,12,7,8,9,10,11,12,7,8,9,10,11,12,7,8,9,10,11,12,7,8,9,10,11,12,7,8,9,10,11,12,7,8,9,10,11,12,8,7,8,9,10,11,12,7,8,9,10,11,12,11,10,7,8,9,10,11,12,7,8,9,10,11,12,7,7,8,8,9,9,10,10,11,11,12,12,7,7,8,8,9,9,10,10,11,11,12,12,7,8,9,10,11,12,7,8,9,10,11,12,7,8,9,10,11,12,7,8,9,10,11,12,7,8,9,10,11,12,7,8,9,10,11,12,7,8,9,10,11,12,7,8,9,10,11,12,9,9,8,7,0,9,10,11,9,7,8,9,10,11,12,7,8,9,10,11,12,7,8,9,10,11,12,7,8,9,10,11,12,7,8,9,10,11,12,7,8,9,10,11,12,7,8,9,10,11,12,7,8,9,10,11,12,7,8,9,10,11,12,7,8,9,10,11,12,9,7,8,9,10,11,12,11,8,7,8,9,10,11,12,54,55,42,0,0,0,42,34,0,42,0,0,0,29,0,34,42,0,42,0,34,34,34,42,42,0,42,42,0,0,42,0,42,42,42,0,34,42,42,42,42,0,42,34,29,33,34,35,33,34,42,35,33,34,42,35,34,42,35,34,42,35,34,42,35,33,34,42,35,33,34,42,35,33,35,33,34,35,33,34,35,33,33,33,35,33,35,33,34,42,35,34,42,35,34,42,35,34,42,35,33,34,42,35,33,34,42,35,35,33,34,42,35,34,42,35,33,34,35,33,34,35,33,34,42,35,33,34,42,35,33,33,34,34,42,42,35,35,33,33,34,34,42,42,35,35,35,35,35,33,33,33,35,34,42,35,33,33,33,34,42,35,33,33,34,42,35,33,34,42,35,33,34,42,35,33,34,42,35,33,34,42,35,33,34,42,35,33,33,35,33,33,33,35,35,35,35,35,35,35,33,33,33,33,33,33,33,33,33,35,33,34,42,35,33,34,35,33,34,42,35,33,34,42,35,0,0,34,42,35,34,42,35,34,42,35,33,34,42,35,34,42,35,33,34,42,35,33,34,42,35,33,35,33,34,42,35,42,56,57,58,59,56,60,57,61,58,59,58,59,58,56,62,62,58,57,61,62,56,62,56,58,62,63,64,65,66,67,68,69,63,64,65,66,63,64,65,66],"f":[0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[6]]]],[8,8],[[[9,[6,6,6]]],[[9,[6,6,6]]]],[[[10,[6]]],[[10,[6]]]],[[[11,[6]]],[[11,[6]]]],[12,12],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],0,0,0,0,0,[[],[[15,[7,14]]]],[[],[[15,[8,14]]]],[[],[[15,[9,14]]]],[[],[[15,[10,14]]]],[[],[[15,[11,14]]]],[[],[[15,[12,14]]]],[[],[[15,[14]]]],[[],[[15,[14]]]],[[],[[15,[14]]]],[[],[[15,[14]]]],[[],[[15,[14]]]],[[],[[15,[14]]]],[16,[[15,[14]]]],[16,[[15,[14]]]],[16,[[15,[14]]]],[16,[[15,[14]]]],[16,[[15,[14]]]],[16,[[15,[14]]]],[16,[[15,[14]]]],[16,[[15,[14]]]],[16,[[15,[14]]]],[16,[[15,[14]]]],[16,[[15,[14]]]],[16,[[15,[14]]]],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[8,[[5,[3]]]],[7],[8],[9],[10],[11],[12],[[[7,[18]],7],19],[[8,8],19],[[[9,[18,18,18]],9],19],[[[10,[18]],10],19],[[[11,[18]],11],19],[[12,12],19],0,0,[[[7,[20]],21],22],[[8,21],22],[[[9,[20,20,20]],21],22],[[[10,[20]],21],22],[[[11,[20]],21],22],[[12,21],22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],[[]],[[[23,[4]]],[[23,[2,4]]]],[[[23,[4]]],[[23,[2,4]]]],[[[23,[4]]],[[23,[2,4]]]],[[[23,[4]]],[[23,[2,4]]]],[[[23,[4]]],[[23,[2,4]]]],[[[23,[4]]],[[23,[2,4]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[25,[[25,[2]]]],[25,[[25,[2]]]],[25,[[25,[2]]]],[25,[[25,[2]]]],[25,[[25,[2]]]],[25,[[25,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],0,[[8,28]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[30,[29]],31,12],32],0,[33,33],[[[34,[29]]],[[34,[29]]]],[[[35,[29]]],[[35,[29]]]],[[]],[[]],[[]],[[],17],[[],36],[[[30,[29]],37,7,38,[39,[8]],[39,[40]]],32],0,[[[30,[29]],31,40,40],32],0,[[],41],[[],[[15,[[34,[29]],14]]]],[[],[[15,[42,14]]]],[[],[[15,[[35,[29]],14]]]],[[],[[15,[14]]]],[[],[[15,[14]]]],[[],[[15,[14]]]],[16,[[15,[14]]]],[16,[[15,[14]]]],[16,[[15,[14]]]],[16,[[15,[14]]]],[16,[[15,[14]]]],[16,[[15,[14]]]],[17],[17],[17],[17],[17],[17],[17],[17],[[[35,[29]]],43],[17],[17],[17],[17],[[[34,[29]]]],[42],[[[35,[29]]]],[[33,33],19],[[[34,[29]],[34,[29]]],19],[[[35,[29]],[35,[29]]],19],[[],19],[[],19],[[],19],[[33,21],22],[[[34,[29]],21],22],[[[42,[29]],21],22],[[[35,[29]],21],22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[35,[29]]],44],[[]],[[[35,[29]]],45],[[31,40,40]],[31],[[[30,[29]],31,40,40,[39,[38]],39],32],0,[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],17],[[],[[5,[46]]]],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],[[[23,[4]]],[[23,[2,4]]]],[[[23,[4]]],[[23,[2,4]]]],[[[23,[4]]],[[23,[2,4]]]],[[[23,[4]]],[[23,[2,4]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[25,[[25,[2]]]],[25,[[25,[2]]]],[25,[[25,[2]]]],[25,[[25,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[47,13],[[[30,[29]],31,12,[39,[40]]],32],0,[[31,[39,[11]],12,40,39,[39,[[48,[40]]]]],32],[[],44],[[],44],[[31,12],[[35,[29]]]],[[37,7,38,[39,[8]],[39,[40]]],[[35,[29]]]],[[31,40,40],[[35,[29]]]],[[31,40,40,[39,[38]],39],[[35,[29]]]],[[31,12,[39,[40]]],[[35,[29]]]],[[31,49,[39,[40]],39,[39,[40]]],[[35,[29]]]],[31,[[35,[29]]]],[[]],[[],41],[[]],[[]],[[]],[13,13],[[],13],[[],13],[[[30,[29]],31,49,[39,[40]],39,[39,[40]]],32],0,[[],[[5,[50]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],[[5,[3,4]]]],[[],26],[[],26],[[],26],[[],26],[[],27],[[],27],[[],27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[30,[29]],31],32],0,[[]],[[]],[[]],[[]],[13,[[52,[51]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"p":[[3,"Private"],[8,"Any"],[15,"u8"],[3,"Global"],[3,"Vec"],[8,"Clone"],[3,"FragmentMetadata"],[3,"UniqueOptions"],[3,"FragmentDefinition"],[3,"FragmentInstance"],[3,"PublishingData"],[4,"FragmentBuyOptions"],[3,"Weight"],[3,"Error"],[4,"Result"],[15,"u32"],[15,"usize"],[8,"PartialEq"],[15,"bool"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"TypeId"],[3,"Type"],[8,"FnOnce"],[8,"Config"],[6,"OriginFor"],[6,"Hash128"],[6,"DispatchResult"],[3,"Pallet"],[4,"Event"],[4,"Call"],[3,"CrateVersion"],[6,"Hash256"],[3,"FragmentPerms"],[4,"Option"],[15,"u64"],[3,"StorageVersion"],[4,"Error"],[6,"DispatchResultWithPostInfo"],[15,"str"],[3,"DispatchInfo"],[3,"PalletInfoData"],[3,"RuntimeDbWeight"],[3,"Compact"],[15,"u128"],[3,"StorageInfo"],[3,"PostDispatchInfo"],[3,"DispatchErrorWithPostInfo"],[8,"WeightInfo"],[13,"Quantity"],[13,"UniqueData"],[13,"publish"],[13,"mint"],[13,"give"],[13,"create_account"],[13,"unpublish"],[13,"buy"],[13,"create"],[13,"InventoryAdded"],[13,"InventoryRemoved"],[13,"InventoryUpdated"],[13,"Expired"],[13,"DefinitionCreated"],[13,"Publishing"],[13,"Unpublishing"]]},\
"pallet_protos":{"doc":"This pallet <code>protos</code> performs logic related to …","tn":["AccountsInfo","Closed","Contract","Erc721","Evm","ExternalAsset","GetProtosParams","LinkSource","LinkedAsset","Open","Proto","ProtoOwner","ProtoPatch","Tickets","UsageLicense","User","WeightInfo","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","accounts_info","active_accounts","add_upload_auth","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","available","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","block","block","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","categories","category","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","creator","data_hash","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","del_upload_auth","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","desc","deserialize","detach","drop","drop","drop","drop","drop","drop","drop","drop","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","exclude_tags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","identity","identity","identity","identity","identity","identity","identity","identity","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","is_clear","license","lifetime_accounts","limit","metadata","metadata_keys","owner","owner","pallet","patch","patches","references","references","return_owners","serialize","tags","tags","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","transfer","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","upload","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","1","2","0","1","2","0","0","0","0","AccountCurations","Call","CircularReference","Config","CurationExpiration","CurationNotFound","Detached","Detached","Error","Event","Event","ExpiringCurations","InsufficientBalance","MetaKeys","MetaKeysIndex","MetadataChanged","Module","NotEnoughTickets","Pallet","Patched","ProtoCurations","ProtoExists","ProtoNotFound","Protos","ProtosByCategory","ProtosByOwner","ReferenceNotFound","Staked","StorageBytesMultiplier","SystematicFailure","Tags","TagsIndex","TicketsAssetId","Traits","Transferred","Unauthorized","Unstaked","Uploaded","WeightInfo","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","ban","ban","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","count","crate_version","curate","curate","current_storage_version","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","detach","detach","dispatch_bypass_filter","drop","drop","drop","drop","encode_to","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_name","get_call_names","get_dispatch_info","get_protos","identity","identity","identity","index","infos","init","init","init","init","integrity_test","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","migrate","module_name","name","new_call_variant_ban","new_call_variant_curate","new_call_variant_detach","new_call_variant_patch","new_call_variant_set_metadata","new_call_variant_transfer","new_call_variant_upload","offchain_worker","on_chain_storage_version","on_finalize","on_finalize","on_genesis","on_idle","on_initialize","on_runtime_upgrade","patch","patch","set_metadata","set_metadata","storage_info","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","transfer","transfer","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","tt_default_parts","tt_error_token","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","upload","upload","vzip","vzip","vzip","vzip","with_weight","amount","category","data","data","data","license","license","linked_asset","metadata_key","new_owner","new_references","proto_hash","proto_hash","proto_hash","proto_hash","proto_hash","proto_hash","references","tags","tags","target_account","target_chain","account_id","account_id","balance","balance","cid","cid","cid","cid","owner_id","proto_hash","proto_hash","proto_hash","proto_hash","proto_hash","proto_hash","proto_hash"],"q":["pallet_protospallet_protos::LinkSource","","","pallet_protos::LinkedAsset","","","pallet_protos::ProtoOwner","","pallet_protos::UsageLicense","","pallet_protos::pallet","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pallet_protos::pallet::Call","","","","","","","","","","","","","","","","","","","","","","pallet_protos::pallet::Event","","","","","","","","","","","","","","",""],"d":["Struct that represents the account information of a …","Proto-Fragment is not available for use (owners can always …","Proto-Fragment is available for use if a custom contract …","Ethereum (ERC721 Contract address, Token ID, Link source)","TODO: Documentation","An <strong>external asset</strong> not on this chain","<strong>Data Type</strong> used to <strong>Query and Filter for Proto-Fragments</strong>","TODO: Documentation","<strong>Types</strong> of <strong>Assets that are linked to a Proto-Fragment</strong> (e.g …","Proto-Fragment is available for use freely","<strong>Struct</strong> of a <strong>Proto-Fragment</strong>","<strong>Types</strong> of <strong>Proto-Fragment Owners</strong>","<strong>Struct</strong> of a <strong>Proto-Fragment Patch</strong>","Proto-Fragment is available for use if an amount of …","<strong>Enum</strong> that indicates <strong>how a Proto-Fragment can be used</strong>","A <strong>regular account</strong> on <strong>this chain</strong>","Weight functions needed for pallet_protos.","","","","","","","","","Accounts information for this proto.","TODO: Documentation","","","","","","","","","","","","","","","","","","Whether the Proto-Fragments should be available or not","","","","","","","","","","","","","","","","","","","","","","","","","<strong>Block Number</strong> in which the <strong>patch was created</strong>","<strong>Block Number</strong> in which the <strong>Proto-Fragment was minted in</strong>","","","","","","","","","","","","","","","","","List of categories to filter by","<strong>Category</strong> of the <strong>Proto-Fragment</strong>","","","","","","","","","","","","","","","","","","<strong>Original Creator</strong> of the <strong>Proto-Fragment</strong>","<strong>Hash</strong> of patch data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether to order the results in descending or ascending …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The returned Proto-Fragments must not have any tag that is …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Number of Proto-Fragment Results to skip","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<strong>License</strong> details of the <strong>Proto-Fragment</strong>","TODO: Documentation","Number of Proto-Fragments to retrieve","<strong>Map</strong> that maps the <strong>Key of a Proto-Fragment’s Metadata </strong>…","List of Metadata Keys of the Proto-Fragment that should …","Owner of the Proto-Fragment","<em>Current Owner</em>* of the <strong>Proto-Fragment</strong>","The module that hosts all the FRAME types needed to add …","","<strong>List of <em>ProtoPatch</em> structs</strong> of the <strong>Proto-Fragment</strong>","<strong>List of New Proto-Fragments</strong> that was <strong>used</strong> to <strong>create</strong> the …","<strong>List of other Proto-Fragments</strong> used to create the …","Whether to return the owner(s) of all the returned …","","List of tags to filter by","<strong>List of Tags</strong> associated with the <strong>Proto-Fragment</strong>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<strong>StorageMap</strong> that maps a <strong>Clamor Account ID</strong> to a <strong>list of </strong>…","Contains one variant per dispatchable that can be called …","Proto-Fragment’s References includes itself!","Configure the pallet by specifying the parameters and …","The number of blocks after which a curation period is over","Curation not found","A Proto-Fragment was detached","Already detached","Custom dispatch errors of this pallet.","The event emitted by this pallet.","Because this pallet emits events, it depends on the runtime…","<strong>StorageMap</strong> that maps a <strong>Block number</strong> to a list of accounts …","Not enough tokens to stake","<strong>StorageMap</strong> that maps a <strong>Metadata Key (of type <code>Vec&lt;u8&gt;</code>)</strong> to …","<strong>StorageValue</strong> that <strong>equals</strong> the <strong>total number of unique </strong>…","A Proto-Fragment metadata has changed","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","Not enough tickets burned on the proto","The pallet implementing the on-chain logic.","A Proto-Fragment was patched","<strong>StorageDoubleMap</strong> that maps a <strong>Proto-Fragment and a Clamor </strong>…","Proto already uploaded","Proto not found","<strong>StorageMap</strong> that maps a <strong>Proto-Fragment’s data’s hash</strong> to …","<strong>StorageMap</strong> that maps a <strong>variant of the <em>Category</em> enum</strong> to a …","<strong>StorageMap</strong> that maps a <strong>variant of the <em>ProtoOwner</em> enum</strong> to a …","Reference not found","Stake was created","Weight for adding a a byte worth of storage in certain …","Systematic failure - those errors should not happen.","<strong>StorageMap</strong> that maps a <strong>Tag (of type <code>Vec&lt;u8&gt;</code>)</strong> to an <strong>index </strong>…","<strong>StorageValue</strong> that <strong>equals</strong> the <strong>total number of unique tags </strong>…","Asset ID of the fungible asset “TICKET”","<strong>StorageMap</strong> that maps a <strong>Trait ID</strong> to the name of the Trait …","A Proto-Fragment was transferred","Not the owner of the proto","Stake was unlocked","A Proto-Fragment was uploaded","Weight functions needed for pallet_protos.","","","","","","","","","","","","Delete Proto-Fragment <code>proto_hash</code> from all relevant Storage …","Delete Proto-Fragment <code>proto_hash</code> from all relevant Storage …","","","","","","","","","","","","","","","","","","","","","","","","","","Curate, burning tickets on a Proto-Fragment","Curate, burning tickets on a Proto-Fragment","","","","","","","","","","","","","","","","","","","","","","<strong>Detach</strong> a <strong>Proto-Fragment</strong> from <strong>this blockchain</strong> to an …","<strong>Detach</strong> a <strong>Proto-Fragment</strong> from <strong>this blockchain</strong> to an …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","<strong>Query</strong> and <strong>Return</strong> <strong>Proto-Fragment(s)</strong> based on <strong><code>params</code></strong>. The …","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Create a call with the variant <code>ban</code>.","Create a call with the variant <code>curate</code>.","Create a call with the variant <code>detach</code>.","Create a call with the variant <code>patch</code>.","Create a call with the variant <code>set_metadata</code>.","Create a call with the variant <code>transfer</code>.","Create a call with the variant <code>upload</code>.","","","","During the block finalization phase","","","","","<strong>Patch</strong> an <strong>existing Proto-Fragment</strong> (<em>by appending the hash of </em>…","<strong>Patch</strong> an <strong>existing Proto-Fragment</strong> (<em>by appending the hash of </em>…","<strong>Alters</strong> the <strong>metadata</strong> of a <strong>Proto-Fragment</strong> (whose hash is …","<strong>Alters</strong> the <strong>metadata</strong> of a <strong>Proto-Fragment</strong> (whose hash is …","","","","","","","","<strong>Transfer</strong> the <strong>ownership</strong> of a <strong>Proto-Fragment</strong> from <strong><code>origin</code></strong> to …","<strong>Transfer</strong> the <strong>ownership</strong> of a <strong>Proto-Fragment</strong> from <strong><code>origin</code></strong> to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<strong>Upload</strong> a <strong>Proto-Fragment</strong> onto the <strong>Blockchain</strong>. Furthermore, …","<strong>Upload</strong> a <strong>Proto-Fragment</strong> onto the <strong>Blockchain</strong>. Furthermore, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,14,14,8,7,10,0,0,0,14,0,0,0,14,0,10,0,7,8,10,11,12,13,14,15,15,13,51,7,8,10,11,12,13,14,15,7,8,10,11,12,13,14,15,11,7,8,10,11,12,13,14,15,7,8,10,11,12,13,14,15,7,8,10,11,12,13,14,15,12,15,7,8,10,11,12,13,14,15,7,8,10,11,12,13,14,15,11,15,13,7,8,10,11,12,13,14,15,7,8,10,11,12,13,14,15,15,12,7,8,10,11,12,13,14,15,7,8,10,11,12,13,14,15,7,8,10,11,12,13,14,15,7,8,10,11,12,13,14,15,13,51,7,8,10,11,12,13,14,15,7,8,10,11,12,13,14,15,11,11,51,7,8,10,11,12,13,14,15,7,8,10,11,12,13,14,15,7,8,10,12,13,14,15,7,8,10,12,13,14,15,11,7,8,10,12,13,14,15,7,8,10,11,12,13,14,15,11,7,7,8,8,10,10,11,11,12,12,13,13,14,14,15,15,7,7,8,8,10,10,11,11,12,12,13,13,14,14,15,15,7,8,10,11,12,13,14,15,7,8,10,11,12,13,14,15,7,8,10,11,12,13,14,15,7,8,10,11,12,13,14,15,7,8,10,11,12,13,14,15,7,8,10,11,12,13,14,15,7,8,10,11,12,13,14,15,7,8,10,11,12,13,14,15,13,15,13,11,15,11,11,15,0,51,15,12,15,11,11,11,15,7,8,10,11,12,13,14,15,7,8,10,11,12,13,14,15,51,7,8,10,11,12,13,14,15,7,8,10,11,12,13,14,15,7,8,10,11,12,13,14,15,7,8,10,11,12,13,14,15,7,8,10,11,12,13,14,15,7,8,10,11,12,13,14,15,7,8,10,11,12,13,14,15,7,8,10,11,12,13,14,15,7,8,10,11,12,13,14,15,51,7,8,10,11,12,13,14,15,52,52,52,53,53,53,54,55,56,57,0,0,39,0,30,39,35,39,0,0,30,0,39,0,0,35,0,39,0,35,0,39,39,0,0,0,39,35,30,39,0,0,30,0,35,39,35,35,30,34,35,36,34,35,39,36,34,35,39,36,34,36,35,39,36,35,39,36,35,39,36,34,35,39,36,34,35,39,36,34,35,36,34,35,36,34,34,34,36,34,35,39,36,35,39,36,35,39,36,35,39,36,34,35,39,36,34,35,39,36,34,36,36,34,35,39,36,35,39,36,34,35,36,34,35,36,34,35,39,36,34,35,39,36,34,34,35,35,39,39,36,36,34,34,35,35,39,39,36,36,36,36,36,34,35,39,36,34,34,34,35,39,36,34,34,35,39,36,34,35,39,36,34,35,39,36,34,35,39,36,34,35,39,36,34,35,39,36,34,34,34,36,36,36,36,36,36,36,34,34,34,34,34,34,34,34,34,36,34,36,34,35,39,36,34,35,36,34,36,34,35,39,36,34,35,39,36,0,0,35,39,36,35,39,36,35,39,36,34,35,39,36,35,39,36,34,35,39,36,34,35,39,36,34,36,34,35,39,36,39,58,59,59,60,61,59,60,59,61,62,60,60,62,61,63,58,64,59,59,60,63,63,65,66,65,66,67,68,69,70,71,67,68,69,70,71,65,66],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],0,0,[[],2],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[7,7],[8,8],[[[10,[9]]],[[10,[9]]]],[[[11,[9,9]]],[[11,[9,9]]]],[[[12,[9]]],[[12,[9]]]],[13,13],[[[14,[9]]],[[14,[9]]]],[[[15,[9,9]]],[[15,[9,9]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],[[17,[7,16]]]],[[],[[17,[8,16]]]],[[],[[17,[10,16]]]],[[],[[17,[11,16]]]],[[],[[17,[12,16]]]],[[],[[17,[13,16]]]],[[],[[17,[14,16]]]],[[],[[17,[15,16]]]],[[],[[17,[16]]]],[[],[[17,[16]]]],[[],[[17,[16]]]],[[],[[17,[16]]]],[[],[[17,[16]]]],[[],[[17,[16]]]],[[],[[17,[16]]]],[[],[[17,[16]]]],[18,[[17,[16]]]],[18,[[17,[16]]]],[18,[[17,[16]]]],[18,[[17,[16]]]],[18,[[17,[16]]]],[18,[[17,[16]]]],[18,[[17,[16]]]],[18,[[17,[16]]]],[18,[[17,[16]]]],[18,[[17,[16]]]],[18,[[17,[16]]]],[18,[[17,[16]]]],[18,[[17,[16]]]],[18,[[17,[16]]]],[18,[[17,[16]]]],[18,[[17,[16]]]],[[],13],[[],2],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],0,[[],[[17,[11]]]],[[],2],[19],[19],[19],[19],[19],[19],[19],[19],[7],[8],[10],[11],[12],[13],[14],[15],[[7,7],20],[[8,8],20],[[[10,[21]],10],20],[[[12,[21]],12],20],[[13,13],20],[[[14,[21]],14],20],[[[15,[21,21]],15],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0,[[7,22],23],[[8,22],23],[[[10,[24]],22],23],[[[12,[24]],22],23],[[13,22],23],[[[14,[24]],22],23],[[[15,[24,24]],22],23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[25,[5]]],[[25,[3,5]]]],[[[25,[5]]],[[25,[3,5]]]],[[[25,[5]]],[[25,[3,5]]]],[[[25,[5]]],[[25,[3,5]]]],[[[25,[5]]],[[25,[3,5]]]],[[[25,[5]]],[[25,[3,5]]]],[[[25,[5]]],[[25,[3,5]]]],[[[25,[5]]],[[25,[3,5]]]],[26,[[26,[3]]]],[26,[[26,[3]]]],[26,[[26,[3]]]],[26,[[26,[3]]]],[26,[[26,[3]]]],[26,[[26,[3]]]],[26,[[26,[3]]]],[26,[[26,[3]]]],[27,[[27,[3]]]],[27,[[27,[3]]]],[27,[[27,[3]]]],[27,[[27,[3]]]],[27,[[27,[3]]]],[27,[[27,[3]]]],[27,[[27,[3]]]],[27,[[27,[3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],0,0,0,0,0,0,0,0,[[],2],0,0,0,0,[11,17],0,0,[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[[31,[30]],32],33],0,[[]],[[]],[[]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34,34],[[[35,[30]]],[[35,[30]]]],[[[36,[30]]],[[36,[30]]]],[[]],[[]],[[]],[[],19],[[],37],[[[31,[30]],32],33],0,[[],38],[[],[[17,[[35,[30]],16]]]],[[],[[17,[39,16]]]],[[],[[17,[[36,[30]],16]]]],[[],[[17,[16]]]],[[],[[17,[16]]]],[[],[[17,[16]]]],[18,[[17,[16]]]],[18,[[17,[16]]]],[18,[[17,[16]]]],[18,[[17,[16]]]],[18,[[17,[16]]]],[18,[[17,[16]]]],[19],[19],[19],[19],[19],[19],[19],[19],[[[31,[30]],32,40,[6,[4]]],33],0,[[[36,[30]]],41],[19],[19],[19],[19],[[[35,[30]]]],[39],[[[36,[30]]]],[[34,34],20],[[[35,[30]],[35,[30]]],20],[[[36,[30]],[36,[30]]],20],[[],20],[[],20],[[],20],[[34,22],23],[[[35,[30]],22],23],[[[39,[30]],22],23],[[[36,[30]],22],23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[36,[30]]],42],[[]],[[[36,[30]]],43],[[[11,[[6,[4]]]]],[[17,[[6,[4]],[6,[4]]]]]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],19],[[],[[6,[44]]]],[[],19],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[]],[[]],[[[25,[5]]],[[25,[3,5]]]],[[[25,[5]]],[[25,[3,5]]]],[[[25,[5]]],[[25,[3,5]]]],[[[25,[5]]],[[25,[3,5]]]],[26,[[26,[3]]]],[26,[[26,[3]]]],[26,[[26,[3]]]],[26,[[26,[3]]]],[27,[[27,[3]]]],[27,[[27,[3]]]],[27,[[27,[3]]]],[27,[[27,[3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[45,2],[[],42],[[],42],[32,[[36,[30]]]],[32,[[36,[30]]]],[[32,40,[6,[4]]],[[36,[30]]]],[[32,[46,[14]],[6,[32]],[46,[[6,[[6,[4]]]]]],[6,[4]]],[[36,[30]]]],[[32,[6,[4]],[6,[4]]],[[36,[30]]]],[32,[[36,[30]]]],[[[6,[32]],47,[6,[[6,[4]]]],[46,[8]],14,[6,[4]]],[[36,[30]]]],[[]],[[],38],[[]],[[]],[[]],[2,2],[[],2],[[],2],[[[31,[30]],32,[46,[14]],[6,[32]],[46,[[6,[[6,[4]]]]]],[6,[4]]],33],0,[[[31,[30]],32,[6,[4]],[6,[4]]],33],0,[[],[[6,[48]]]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[]],[[]],[[]],[[[31,[30]],32],33],0,[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],[[6,[4,5]]]],[[],28],[[],28],[[],28],[[],28],[[],29],[[],29],[[],29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[31,[30]],[6,[32]],47,[6,[[6,[4]]]],[46,[8]],14,[6,[4]]],33],0,[[]],[[]],[[]],[[]],[2,[[50,[49]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"p":[[3,"Private"],[3,"Weight"],[8,"Any"],[15,"u8"],[3,"Global"],[3,"Vec"],[4,"LinkSource"],[4,"LinkedAsset"],[8,"Clone"],[4,"ProtoOwner"],[3,"GetProtosParams"],[3,"ProtoPatch"],[3,"AccountsInfo"],[4,"UsageLicense"],[3,"Proto"],[3,"Error"],[4,"Result"],[15,"u32"],[15,"usize"],[15,"bool"],[8,"PartialEq"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"TypeId"],[3,"Type"],[8,"Config"],[6,"OriginFor"],[6,"Hash256"],[6,"DispatchResult"],[3,"Pallet"],[4,"Event"],[4,"Call"],[3,"CrateVersion"],[3,"StorageVersion"],[4,"Error"],[4,"SupportedChains"],[6,"DispatchResultWithPostInfo"],[15,"str"],[3,"DispatchInfo"],[3,"PalletInfoData"],[3,"RuntimeDbWeight"],[4,"Option"],[4,"Categories"],[3,"StorageInfo"],[3,"PostDispatchInfo"],[3,"DispatchErrorWithPostInfo"],[8,"WeightInfo"],[13,"Evm"],[13,"Erc721"],[13,"User"],[13,"ExternalAsset"],[13,"Tickets"],[13,"Contract"],[13,"curate"],[13,"upload"],[13,"patch"],[13,"set_metadata"],[13,"transfer"],[13,"detach"],[13,"ban"],[13,"Staked"],[13,"Unstaked"],[13,"Uploaded"],[13,"Patched"],[13,"MetadataChanged"],[13,"Detached"],[13,"Transferred"]]},\
"pallet_protos_rpc":{"doc":"Implementation of the RPC functions related to Pallet …","t":[3,8,8,8,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Protos","ProtosApiClient","ProtosApiServer","ProtosRuntimeApi","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","get_protos","get_protos","get_protos","get_protos","get_protos_with_context","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","into_rpc","new","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip"],"q":["pallet_protos_rpc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["An implementation of protos specific RPC methods.","Client implementation for the <code>ProtosApi</code> RPC API.","Server trait implementation for the <code>ProtosApi</code> RPC API.","The trait <code>ProtosApi</code> is declared to be a Runtime API","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","<strong>Query</strong> and <strong>Return</strong> <strong>Proto-Fragment(s)</strong> based on <strong><code>params</code></strong>","<strong>Query</strong> and <strong>Return</strong> <strong>Proto-Fragment(s)</strong> based on <strong><code>params</code></strong>","<strong>Query</strong> and <strong>Return</strong> <strong>Proto-Fragment(s)</strong> based on <strong><code>params</code></strong>","<strong>Query</strong> and <strong>Return</strong> <strong>Proto-Fragment(s)</strong> based on <strong><code>params</code></strong>","<strong>Query</strong> and <strong>Return</strong> <strong>Proto-Fragment(s)</strong> based on <strong><code>params</code></strong>","","Calls <code>U::from(self)</code>.","","","","","","Collects all the methods and subscriptions defined in the …","Create new <code>Protos</code> with the given reference to the client.","","","","","",""],"i":[0,0,0,0,13,13,13,13,13,13,13,13,13,13,13,13,22,23,13,24,23,13,13,13,13,13,13,13,22,13,13,13,13,13,13,13],"f":[0,0,0,0,[[],1],[[],1],[[]],[[]],[2],[2],[2],[[]],[[]],[[]],[[]],[[]],[[[4,[3]],5],[[6,[3]]]],[[7,[4,[[10,[8,9]]]]],[[11,[[11,[[10,[8,9]],[10,[8,9]]]],12]]]],[[13,[4,[3]],5],[[6,[3]]]],[[[4,[3]],5],[[16,[[15,[14]]]]]],[[7,17,[4,[[10,[8,9]]]]],[[11,[[11,[[10,[8,9]],[10,[8,9]]]],12]]]],[[],2],[[]],[[[15,[9]]],[[15,[1,9]]]],[18,[[18,[1]]]],[19,[[19,[1]]]],[[]],[[]],[[],20],[18,13],[[],11],[[],11],[[],21],[[]],[[]],[[]]],"p":[[8,"Any"],[15,"usize"],[3,"String"],[3,"GetProtosParams"],[4,"Option"],[6,"RpcResult"],[4,"BlockId"],[15,"u8"],[3,"Global"],[3,"Vec"],[4,"Result"],[4,"ApiError"],[3,"Protos"],[8,"Future"],[3,"Box"],[3,"Pin"],[4,"ExecutionContext"],[3,"Arc"],[3,"Rc"],[3,"RpcModule"],[3,"TypeId"],[8,"ProtosApiServer"],[8,"ProtosRuntimeApi"],[8,"ProtosApiClient"]]},\
"pallet_protos_rpc_runtime_api":{"doc":"This package declares the Runtime APIs related to Pallet …","t":[8,11,11],"n":["ProtosApi","get_protos","get_protos_with_context"],"q":["pallet_protos_rpc_runtime_api","",""],"d":["The trait <code>ProtosApi</code> is declared to be a Runtime API","<strong>Query</strong> and <strong>Return</strong> <strong>Proto-Fragment(s)</strong> based on <strong><code>params</code></strong>","<strong>Query</strong> and <strong>Return</strong> <strong>Proto-Fragment(s)</strong> based on <strong><code>params</code></strong>"],"i":[0,8,8],"f":[0,[[1,[4,[[3,[2]]]]],[[5,[[5,[[3,[2]],[3,[2]]]],6]]]],[[1,7,[4,[[3,[2]]]]],[[5,[[5,[[3,[2]],[3,[2]]]],6]]]]],"p":[[4,"BlockId"],[15,"u8"],[3,"Vec"],[3,"GetProtosParams"],[4,"Result"],[4,"ApiError"],[4,"ExecutionContext"],[8,"ProtosApi"]]},\
"sp_clamor":{"doc":"Helper Functions and Types that are used in other Packages …","t":[17,6,6,6,0,5,5,5,3,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,5,11,5,11,11,11,11,11],"n":["CID_PREFIX","Hash128","Hash256","Hash64","clamor","get_locked_frag_account","http_json_post","init","HostFunctions","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_ref","get_geth_url","host_functions","init","into","into_any","into_any_arc","into_any_rc","on_new_fragment","register_static","say_hello_world","try_from","try_into","type_id","unchecked_into","vzip"],"q":["sp_clamor","","","","","","","","sp_clamor::clamor","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The IPFS CID prefix used to use to obtain any data that is …","128 bytes u8-Array","256 bytes u8-Array","64 bytes u8-Array","A runtime interface for the Clamor Blockchain","Returns an account ID that can stake FRAG tokens. This …","Make an HTTP POST Request with data <code>body</code> to the URL <code>url</code>","Set the Fragnova-owned Geth Node’s URL","Provides implementations for the extern host functions.","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get the URL of the Fragnova-owned Geth Node","","","Calls <code>U::from(self)</code>.","","","","TODO","","A function that can be called from native/wasm.","","","","",""],"i":[0,0,0,0,0,0,0,0,0,20,20,20,20,20,20,20,20,20,20,0,20,20,20,20,20,20,0,20,0,20,20,20,20,20],"f":[0,0,0,0,0,[[],[[4,[[0,[1,2]],3]]]],[5,[[4,[[7,[6]],5]]]],[[[9,[8]]]],0,[[],10],[[],10],[[]],[[]],[11],[11],[11],[[]],[[]],[[]],[[],[[9,[[7,[6]]]]]],[[],[[7,[12]]]],[[],11],[[]],[[[14,[13]]],[[14,[10,13]]]],[15,[[15,[10]]]],[16,[[16,[10]]]],[17,18],[[],4],[5],[[],4],[[],4],[[],19],[[]],[[]]],"p":[[8,"Encode"],[8,"Decode"],[3,"Error"],[4,"Result"],[15,"str"],[15,"u8"],[3,"Vec"],[3,"String"],[4,"Option"],[8,"Any"],[15,"usize"],[8,"Function"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[6,"Hash256"],[15,"bool"],[3,"TypeId"],[3,"HostFunctions"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
